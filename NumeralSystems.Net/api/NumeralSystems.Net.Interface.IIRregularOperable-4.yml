### YamlMime:ManagedReference
items:
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4
  commentId: T:NumeralSystems.Net.Interface.IIRregularOperable`4
  id: IIRregularOperable`4
  parent: NumeralSystems.Net.Interface
  children:
  - NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  - NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  - NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  - NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  - NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  - NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  - NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  - NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  - NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  langs:
  - csharp
  - vb
  name: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  type: Interface
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: IIRregularOperable
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 9
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Interface for regular operations on incomplete values.
  example: []
  syntax:
    content: 'public interface IIRregularOperable<TIncomplete, TValue, TType, TIndexer> : IIncompleteValue<TValue, TType, TIndexer>, IRregularReversible<TIncomplete, TValue, TType, TIndexer> where TIncomplete : IIncompleteValue<TValue, TType, TIndexer> where TValue : IRegularOperable<TIncomplete, TValue, TType, TIndexer> where TIndexer : struct'
    typeParameters:
    - id: TIncomplete
      description: Incomplete source type
    - id: TValue
      description: Complete source type
    - id: TType
      description: Complete native source type representation
    - id: TIndexer
      description: Indexer for the incomplete type
    content.vb: Public Interface IIRregularOperable(Of TIncomplete As IIncompleteValue(Of TValue, TType, TIndexer), TValue As IRegularOperable(Of TIncomplete, TValue, TType, TIndexer), TType, TIndexer As Structure) Inherits IIncompleteValue(Of TValue, TType, TIndexer), IRregularReversible(Of TIncomplete, TValue, TType, TIndexer)
  inheritedMembers:
  - NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.Binary
  - NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.Permutations
  - NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.IsComplete
  - NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.Item({TIndexer})
  - NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.Enumerable
  - NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.ByteArray
  - NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.ToByteArray
  - NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.ToString(System.String)
  - NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}.ReverseAnd({TValue},{TIncomplete}@)
  - NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}.ReverseAnd({TIncomplete},{TIncomplete}@)
  - NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}.ReverseOr({TValue},{TIncomplete}@)
  - NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}.ReverseOr({TIncomplete},{TIncomplete}@)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
  name.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  id: Not
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: Not()
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Not
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 19
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Bitwise not operation.
  example: []
  syntax:
    content: TIncomplete Not()
    return:
      type: '{TIncomplete}'
      description: Bitwise not result
    content.vb: Function [Not]() As TIncomplete
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.Not*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  id: Xor(`0)
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: Xor(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 25
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Bitwise xor operation.
  example: []
  syntax:
    content: TIncomplete Xor(TIncomplete other)
    parameters:
    - id: other
      type: '{TIncomplete}'
      description: Second parameter of the operation
    return:
      type: '{TIncomplete}'
      description: Bitwise xor on the second parameter
    content.vb: Function [Xor](other As TIncomplete) As TIncomplete
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  id: Xor(`1)
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: Xor(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 31
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Bitwise xor operation.
  example: []
  syntax:
    content: TIncomplete Xor(TValue other)
    parameters:
    - id: other
      type: '{TValue}'
      description: Second parameter of the operation
    return:
      type: '{TIncomplete}'
      description: Bitwise xor on the second parameter
    content.vb: Function [Xor](other As TValue) As TIncomplete
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  id: And(`0)
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: And(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 37
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Bitwise and operation.
  example: []
  syntax:
    content: TIncomplete And(TIncomplete other)
    parameters:
    - id: other
      type: '{TIncomplete}'
      description: Second parameter of the operation
    return:
      type: '{TIncomplete}'
      description: Bitwise and on the second parameter
    content.vb: Function [And](other As TIncomplete) As TIncomplete
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.And*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  id: And(`1)
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: And(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 43
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Bitwise and operation.
  example: []
  syntax:
    content: TIncomplete And(TValue other)
    parameters:
    - id: other
      type: '{TValue}'
      description: Second parameter of the operation
    return:
      type: '{TIncomplete}'
      description: Bitwise and on the second parameter
    content.vb: Function [And](other As TValue) As TIncomplete
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.And*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  id: Or(`0)
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: Or(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 49
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Bitwise or operation.
  example: []
  syntax:
    content: TIncomplete Or(TIncomplete other)
    parameters:
    - id: other
      type: '{TIncomplete}'
      description: Second parameter of the operation
    return:
      type: '{TIncomplete}'
      description: Bitwise or on the second parameter
    content.vb: Function [Or](other As TIncomplete) As TIncomplete
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.Or*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  id: Or(`1)
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: Or(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 55
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Bitwise or operation.
  example: []
  syntax:
    content: TIncomplete Or(TValue other)
    parameters:
    - id: other
      type: '{TValue}'
      description: Second parameter of the operation
    return:
      type: '{TIncomplete}'
      description: Bitwise or on the second parameter
    content.vb: Function [Or](other As TValue) As TIncomplete
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.Or*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  id: Contains(`1)
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: Contains(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TValue)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Contains
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 61
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Checks if the incomplete value contains the given value.
  example: []
  syntax:
    content: bool Contains(TValue value)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to check
    return:
      type: System.Boolean
      description: True if the incomplete includes the value otherwhise false
    content.vb: Function Contains(value As TValue) As Boolean
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TValue)
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  id: Contains(`0)
  parent: NumeralSystems.Net.Interface.IIRregularOperable`4
  langs:
  - csharp
  - vb
  name: Contains(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TIncomplete)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Interface/IIRregularOperable.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Contains
    path: NumeralSystems.Net/Interface/IIRregularOperable.cs
    startLine: 67
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Interface
  summary: Checks if the incomplete value contains the given value.
  example: []
  syntax:
    content: bool Contains(TIncomplete value)
    parameters:
    - id: value
      type: '{TIncomplete}'
      description: The value to check
    return:
      type: System.Boolean
      description: True if the incomplete includes the value otherwhise false
    content.vb: Function Contains(value As TIncomplete) As Boolean
  overload: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains*
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TIncomplete)
references:
- uid: NumeralSystems.Net.Interface
  commentId: N:NumeralSystems.Net.Interface
  href: NumeralSystems.html
  name: NumeralSystems.Net.Interface
  nameWithType: NumeralSystems.Net.Interface
  fullName: NumeralSystems.Net.Interface
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.Binary
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.Binary
  parent: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Binary
  name: Binary
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Binary
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Binary
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Binary
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Binary
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.Permutations
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.Permutations
  parent: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Permutations
  name: Permutations
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Permutations
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Permutations
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Permutations
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Permutations
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.IsComplete
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.IsComplete
  parent: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_IsComplete
  name: IsComplete
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.IsComplete
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.IsComplete
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).IsComplete
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).IsComplete
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.Item({TIndexer})
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.Item(`3)
  parent: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  name: this[TIndexer]
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.this[TIndexer]
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.this[TIndexer]
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).this[](TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).this[](TIndexer)
  name.vb: this[](TIndexer)
  spec.csharp:
  - name: this
  - name: '['
  - name: TIndexer
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.Item(`3)
    name: this[]
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  - name: (
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.Enumerable
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.Enumerable
  parent: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Enumerable
  name: Enumerable
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Enumerable
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Enumerable
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Enumerable
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Enumerable
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.ByteArray
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.ByteArray
  parent: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ByteArray
  name: ByteArray
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ByteArray
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ByteArray
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ByteArray
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ByteArray
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.ToByteArray
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.ToByteArray
  parent: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  name: ToByteArray()
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ToByteArray()
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ToByteArray()
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ToByteArray()
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ToByteArray()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.ToString(System.String)
  parent: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  name: ToString(string)
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ToString(string)
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ToString(string)
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}.ReverseAnd({TValue},{TIncomplete}@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseAnd(`1,`0@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(TValue, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TValue, TType, TIndexer>.ReverseAnd(TValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TValue, TType, TIndexer>.ReverseAnd(TValue, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TValue, TType, TIndexer).ReverseAnd(TValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TValue, TType, TIndexer).ReverseAnd(TValue, TIncomplete)
  name.vb: ReverseAnd(TValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}.ReverseAnd({TIncomplete},{TIncomplete}@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseAnd(`0,`0@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TValue, TType, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TValue, TType, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TValue, TType, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TValue, TType, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  name.vb: ReverseAnd(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}.ReverseOr({TValue},{TIncomplete}@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseOr(`1,`0@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  name: ReverseOr(TValue, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TValue, TType, TIndexer>.ReverseOr(TValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TValue, TType, TIndexer>.ReverseOr(TValue, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TValue, TType, TIndexer).ReverseOr(TValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TValue, TType, TIndexer).ReverseOr(TValue, TIncomplete)
  name.vb: ReverseOr(TValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}.ReverseOr({TIncomplete},{TIncomplete}@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseOr(`0,`0@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  name: ReverseOr(TIncomplete, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TValue, TType, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TValue, TType, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TValue, TType, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TValue, TType, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  name.vb: ReverseOr(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Binary
  name: Binary
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Binary
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Binary
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Binary
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Binary
- uid: NumeralSystems.Net.Interface.IIncompleteValue{{TValue},{TType},{TIndexer}}
  commentId: T:NumeralSystems.Net.Interface.IIncompleteValue{`1,`2,`3}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  name: IIncompleteValue<TValue, TType, TIndexer>
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer)
  name.vb: IIncompleteValue(Of TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Permutations
  name: Permutations
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Permutations
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Permutations
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Permutations
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Permutations
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_IsComplete
  name: IsComplete
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.IsComplete
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.IsComplete
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).IsComplete
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).IsComplete
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  name: this[TIndexer]
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.this[TIndexer]
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.this[TIndexer]
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).this[](TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).this[](TIndexer)
  name.vb: this[](TIndexer)
  spec.csharp:
  - name: this
  - name: '['
  - name: TIndexer
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
    name: this[]
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  - name: (
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Enumerable
  name: Enumerable
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Enumerable
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Enumerable
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Enumerable
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Enumerable
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ByteArray
  name: ByteArray
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ByteArray
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ByteArray
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ByteArray
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ByteArray
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  name: ToByteArray()
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ToByteArray()
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ToByteArray()
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ToByteArray()
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ToByteArray()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  isExternal: true
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  name: ToString(string)
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ToString(string)
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ToString(string)
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(TNumeralValue, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TNumeralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TNumeralValue, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TNumeralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TNumeralValue, TIncomplete)
  name.vb: ReverseAnd(TNumeralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{{TIncomplete},{TValue},{TType},{TIndexer}}
  commentId: T:NumeralSystems.Net.Interface.IRregularReversible{`0,`1,`2,`3}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IRregularReversible`4
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  name: IRregularReversible<TIncomplete, TValue, TType, TIndexer>
  nameWithType: IRregularReversible<TIncomplete, TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TValue, TType, TIndexer>
  nameWithType.vb: IRregularReversible(Of TIncomplete, TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TValue, TType, TIndexer)
  name.vb: IRregularReversible(Of TIncomplete, TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  name.vb: ReverseAnd(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  name: ReverseOr(TNumeralValue, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TNumeralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TNumeralValue, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TNumeralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TNumeralValue, TIncomplete)
  name.vb: ReverseOr(TNumeralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  name: ReverseOr(TIncomplete, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  name.vb: ReverseOr(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3
  commentId: T:NumeralSystems.Net.Interface.IIncompleteValue`3
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  name: IIncompleteValue<TValue, TType, TIndexer>
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer)
  name.vb: IIncompleteValue(Of TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4
  commentId: T:NumeralSystems.Net.Interface.IRregularReversible`4
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  name: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  name.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Not*
  commentId: Overload:NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  name: Not
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Not
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Not
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Not
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Not
- uid: '{TIncomplete}'
  commentId: '!:TIncomplete'
  definition: TIncomplete
  name: TIncomplete
  nameWithType: TIncomplete
  fullName: TIncomplete
- uid: TIncomplete
  name: TIncomplete
  nameWithType: TIncomplete
  fullName: TIncomplete
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor*
  commentId: Overload:NumeralSystems.Net.Interface.IIRregularOperable`4.Xor
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  name: Xor
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And*
  commentId: Overload:NumeralSystems.Net.Interface.IIRregularOperable`4.And
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  name: And
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or*
  commentId: Overload:NumeralSystems.Net.Interface.IIRregularOperable`4.Or
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  name: Or
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains*
  commentId: Overload:NumeralSystems.Net.Interface.IIRregularOperable`4.Contains
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  name: Contains
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
