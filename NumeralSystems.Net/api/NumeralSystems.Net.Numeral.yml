### YamlMime:ManagedReference
items:
- uid: NumeralSystems.Net.Numeral
  commentId: T:NumeralSystems.Net.Numeral
  id: Numeral
  parent: NumeralSystems.Net
  children:
  - NumeralSystems.Net.Numeral.#ctor
  - NumeralSystems.Net.Numeral.#ctor(NumeralSystems.Net.NumeralSystem)
  - NumeralSystems.Net.Numeral.#ctor(NumeralSystems.Net.NumeralSystem,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Boolean)
  - NumeralSystems.Net.Numeral.Base
  - NumeralSystems.Net.Numeral.Bytes
  - NumeralSystems.Net.Numeral.Char
  - NumeralSystems.Net.Numeral.Decimal
  - NumeralSystems.Net.Numeral.Double
  - NumeralSystems.Net.Numeral.Float
  - NumeralSystems.Net.Numeral.FractionalIndices
  - NumeralSystems.Net.Numeral.GetFractionalString(System.Collections.Generic.IList{System.String},System.String)
  - NumeralSystems.Net.Numeral.GetFractionalStrings(System.Collections.Generic.IList{System.String})
  - NumeralSystems.Net.Numeral.GetIntegralString(System.Collections.Generic.IList{System.String},System.String)
  - NumeralSystems.Net.Numeral.GetIntegralStrings(System.Collections.Generic.IList{System.String})
  - NumeralSystems.Net.Numeral.Integer
  - NumeralSystems.Net.Numeral.IntegralIndices
  - NumeralSystems.Net.Numeral.Positive
  - NumeralSystems.Net.Numeral.To(NumeralSystems.Net.NumeralSystem)
  - NumeralSystems.Net.Numeral.ToString
  - NumeralSystems.Net.Numeral.ToString(System.Collections.Generic.IList{System.String},System.String,System.String,System.String)
  - NumeralSystems.Net.Numeral.TrySetValue(System.Collections.Generic.List{System.Int32})
  langs:
  - csharp
  - vb
  name: Numeral
  nameWithType: Numeral
  fullName: NumeralSystems.Net.Numeral
  type: Class
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Numeral
    path: NumeralSystems.Net/Numeral.cs
    startLine: 14
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  example: []
  syntax:
    content: public class Numeral
    content.vb: Public Class Numeral
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NumeralSystems.Net.Numeral.Positive
  commentId: P:NumeralSystems.Net.Numeral.Positive
  id: Positive
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Positive
  nameWithType: Numeral.Positive
  fullName: NumeralSystems.Net.Numeral.Positive
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Positive
    path: NumeralSystems.Net/Numeral.cs
    startLine: 20
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Gets or sets a value indicating whether the number is positive or negative.
  example: []
  syntax:
    content: public bool Positive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Positive As Boolean
  overload: NumeralSystems.Net.Numeral.Positive*
- uid: NumeralSystems.Net.Numeral.Base
  commentId: P:NumeralSystems.Net.Numeral.Base
  id: Base
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: Numeral.Base
  fullName: NumeralSystems.Net.Numeral.Base
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Base
    path: NumeralSystems.Net/Numeral.cs
    startLine: 26
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Represents a numeral in a specific numeral system.
  example: []
  syntax:
    content: public NumeralSystem Base { get; }
    parameters: []
    return:
      type: NumeralSystems.Net.NumeralSystem
    content.vb: Public ReadOnly Property Base As NumeralSystem
  overload: NumeralSystems.Net.Numeral.Base*
- uid: NumeralSystems.Net.Numeral.FractionalIndices
  commentId: P:NumeralSystems.Net.Numeral.FractionalIndices
  id: FractionalIndices
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: FractionalIndices
  nameWithType: Numeral.FractionalIndices
  fullName: NumeralSystems.Net.Numeral.FractionalIndices
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: FractionalIndices
    path: NumeralSystems.Net/Numeral.cs
    startLine: 40
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Gets or sets the list of fractional indices for the numeral.
  remarks: The fractional indices represent the positions of the fractional part of the numeral in the identity list.
  example: []
  syntax:
    content: public List<int> FractionalIndices { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Property FractionalIndices As List(Of Integer)
  overload: NumeralSystems.Net.Numeral.FractionalIndices*
- uid: NumeralSystems.Net.Numeral.GetFractionalStrings(System.Collections.Generic.IList{System.String})
  commentId: M:NumeralSystems.Net.Numeral.GetFractionalStrings(System.Collections.Generic.IList{System.String})
  id: GetFractionalStrings(System.Collections.Generic.IList{System.String})
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: GetFractionalStrings(IList<string>)
  nameWithType: Numeral.GetFractionalStrings(IList<string>)
  fullName: NumeralSystems.Net.Numeral.GetFractionalStrings(System.Collections.Generic.IList<string>)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: GetFractionalStrings
    path: NumeralSystems.Net/Numeral.cs
    startLine: 61
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Retrieves the fractional part of a number represented as a collection of strings in a specific numeral system.
  example: []
  syntax:
    content: public List<string> GetFractionalStrings(IList<string> identity)
    parameters:
    - id: identity
      type: System.Collections.Generic.IList{System.String}
      description: The collection of strings representing the number's identity in the numeral system.
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of strings representing the fractional part of the number.
    content.vb: Public Function GetFractionalStrings(identity As IList(Of String)) As List(Of String)
  overload: NumeralSystems.Net.Numeral.GetFractionalStrings*
  nameWithType.vb: Numeral.GetFractionalStrings(IList(Of String))
  fullName.vb: NumeralSystems.Net.Numeral.GetFractionalStrings(System.Collections.Generic.IList(Of String))
  name.vb: GetFractionalStrings(IList(Of String))
- uid: NumeralSystems.Net.Numeral.GetFractionalString(System.Collections.Generic.IList{System.String},System.String)
  commentId: M:NumeralSystems.Net.Numeral.GetFractionalString(System.Collections.Generic.IList{System.String},System.String)
  id: GetFractionalString(System.Collections.Generic.IList{System.String},System.String)
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: GetFractionalString(IList<string>, string)
  nameWithType: Numeral.GetFractionalString(IList<string>, string)
  fullName: NumeralSystems.Net.Numeral.GetFractionalString(System.Collections.Generic.IList<string>, string)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: GetFractionalString
    path: NumeralSystems.Net/Numeral.cs
    startLine: 74
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Gets the fractional part of the identity as a string, using the provided separator.
  example: []
  syntax:
    content: public string GetFractionalString(IList<string> identity, string separator)
    parameters:
    - id: identity
      type: System.Collections.Generic.IList{System.String}
      description: The list of strings representing the identity.
    - id: separator
      type: System.String
      description: The string used to separate each fractional part.
    return:
      type: System.String
      description: A string representing the fractional part of the identity, separated by the provided separator. If there is no fractional part, returns the first element of the identity list.
    content.vb: Public Function GetFractionalString(identity As IList(Of String), separator As String) As String
  overload: NumeralSystems.Net.Numeral.GetFractionalString*
  nameWithType.vb: Numeral.GetFractionalString(IList(Of String), String)
  fullName.vb: NumeralSystems.Net.Numeral.GetFractionalString(System.Collections.Generic.IList(Of String), String)
  name.vb: GetFractionalString(IList(Of String), String)
- uid: NumeralSystems.Net.Numeral.IntegralIndices
  commentId: P:NumeralSystems.Net.Numeral.IntegralIndices
  id: IntegralIndices
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: IntegralIndices
  nameWithType: Numeral.IntegralIndices
  fullName: NumeralSystems.Net.Numeral.IntegralIndices
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: IntegralIndices
    path: NumeralSystems.Net/Numeral.cs
    startLine: 94
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Gets or sets the list of integral indices representing a numeral system's number.
  remarks: >-
    The integral indices represent the positions of the digits in a number within a specific numeral system.

    The indices are stored as a list of integers.
  example: []
  syntax:
    content: public List<int> IntegralIndices { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Property IntegralIndices As List(Of Integer)
  overload: NumeralSystems.Net.Numeral.IntegralIndices*
- uid: NumeralSystems.Net.Numeral.GetIntegralStrings(System.Collections.Generic.IList{System.String})
  commentId: M:NumeralSystems.Net.Numeral.GetIntegralStrings(System.Collections.Generic.IList{System.String})
  id: GetIntegralStrings(System.Collections.Generic.IList{System.String})
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: GetIntegralStrings(IList<string>)
  nameWithType: Numeral.GetIntegralStrings(IList<string>)
  fullName: NumeralSystems.Net.Numeral.GetIntegralStrings(System.Collections.Generic.IList<string>)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: GetIntegralStrings
    path: NumeralSystems.Net/Numeral.cs
    startLine: 115
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Gets the integral digits of a numeral as a list of string representations.
  example: []
  syntax:
    content: public List<string> GetIntegralStrings(IList<string> identity)
    parameters:
    - id: identity
      type: System.Collections.Generic.IList{System.String}
      description: The list of string representations of the identity of the numeral system (e.g., "0", "1", "2", ...) must have at least the same size as the base.
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of string representations of the integral digits of the numeral.
    content.vb: Public Function GetIntegralStrings(identity As IList(Of String)) As List(Of String)
  overload: NumeralSystems.Net.Numeral.GetIntegralStrings*
  nameWithType.vb: Numeral.GetIntegralStrings(IList(Of String))
  fullName.vb: NumeralSystems.Net.Numeral.GetIntegralStrings(System.Collections.Generic.IList(Of String))
  name.vb: GetIntegralStrings(IList(Of String))
- uid: NumeralSystems.Net.Numeral.GetIntegralString(System.Collections.Generic.IList{System.String},System.String)
  commentId: M:NumeralSystems.Net.Numeral.GetIntegralString(System.Collections.Generic.IList{System.String},System.String)
  id: GetIntegralString(System.Collections.Generic.IList{System.String},System.String)
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: GetIntegralString(IList<string>, string)
  nameWithType: Numeral.GetIntegralString(IList<string>, string)
  fullName: NumeralSystems.Net.Numeral.GetIntegralString(System.Collections.Generic.IList<string>, string)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: GetIntegralString
    path: NumeralSystems.Net/Numeral.cs
    startLine: 130
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  example: []
  syntax:
    content: public string GetIntegralString(IList<string> identity, string separator)
    parameters:
    - id: identity
      type: System.Collections.Generic.IList{System.String}
    - id: separator
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetIntegralString(identity As IList(Of String), separator As String) As String
  overload: NumeralSystems.Net.Numeral.GetIntegralString*
  nameWithType.vb: Numeral.GetIntegralString(IList(Of String), String)
  fullName.vb: NumeralSystems.Net.Numeral.GetIntegralString(System.Collections.Generic.IList(Of String), String)
  name.vb: GetIntegralString(IList(Of String), String)
- uid: NumeralSystems.Net.Numeral.#ctor
  commentId: M:NumeralSystems.Net.Numeral.#ctor
  id: '#ctor'
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Numeral()
  nameWithType: Numeral.Numeral()
  fullName: NumeralSystems.Net.Numeral.Numeral()
  type: Constructor
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: .ctor
    path: NumeralSystems.Net/Numeral.cs
    startLine: 144
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  example: []
  syntax:
    content: public Numeral()
    content.vb: Public Sub New()
  overload: NumeralSystems.Net.Numeral.#ctor*
  nameWithType.vb: Numeral.New()
  fullName.vb: NumeralSystems.Net.Numeral.New()
  name.vb: New()
- uid: NumeralSystems.Net.Numeral.#ctor(NumeralSystems.Net.NumeralSystem)
  commentId: M:NumeralSystems.Net.Numeral.#ctor(NumeralSystems.Net.NumeralSystem)
  id: '#ctor(NumeralSystems.Net.NumeralSystem)'
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Numeral(NumeralSystem)
  nameWithType: Numeral.Numeral(NumeralSystem)
  fullName: NumeralSystems.Net.Numeral.Numeral(NumeralSystems.Net.NumeralSystem)
  type: Constructor
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: .ctor
    path: NumeralSystems.Net/Numeral.cs
    startLine: 154
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  example: []
  syntax:
    content: public Numeral(NumeralSystem numericSystem)
    parameters:
    - id: numericSystem
      type: NumeralSystems.Net.NumeralSystem
    content.vb: Public Sub New(numericSystem As NumeralSystem)
  overload: NumeralSystems.Net.Numeral.#ctor*
  nameWithType.vb: Numeral.New(NumeralSystem)
  fullName.vb: NumeralSystems.Net.Numeral.New(NumeralSystems.Net.NumeralSystem)
  name.vb: New(NumeralSystem)
- uid: NumeralSystems.Net.Numeral.#ctor(NumeralSystems.Net.NumeralSystem,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Boolean)
  commentId: M:NumeralSystems.Net.Numeral.#ctor(NumeralSystems.Net.NumeralSystem,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Boolean)
  id: '#ctor(NumeralSystems.Net.NumeralSystem,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Boolean)'
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Numeral(NumeralSystem, List<int>, List<int>, bool)
  nameWithType: Numeral.Numeral(NumeralSystem, List<int>, List<int>, bool)
  fullName: NumeralSystems.Net.Numeral.Numeral(NumeralSystems.Net.NumeralSystem, System.Collections.Generic.List<int>, System.Collections.Generic.List<int>, bool)
  type: Constructor
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: .ctor
    path: NumeralSystems.Net/Numeral.cs
    startLine: 162
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Represents a numerical value in a specific numeral system.
  example: []
  syntax:
    content: public Numeral(NumeralSystem numericSystem, List<int> integral, List<int> fractional = null, bool positive = true)
    parameters:
    - id: numericSystem
      type: NumeralSystems.Net.NumeralSystem
    - id: integral
      type: System.Collections.Generic.List{System.Int32}
    - id: fractional
      type: System.Collections.Generic.List{System.Int32}
    - id: positive
      type: System.Boolean
    content.vb: Public Sub New(numericSystem As NumeralSystem, integral As List(Of Integer), fractional As List(Of Integer) = Nothing, positive As Boolean = True)
  overload: NumeralSystems.Net.Numeral.#ctor*
  nameWithType.vb: Numeral.New(NumeralSystem, List(Of Integer), List(Of Integer), Boolean)
  fullName.vb: NumeralSystems.Net.Numeral.New(NumeralSystems.Net.NumeralSystem, System.Collections.Generic.List(Of Integer), System.Collections.Generic.List(Of Integer), Boolean)
  name.vb: New(NumeralSystem, List(Of Integer), List(Of Integer), Boolean)
- uid: NumeralSystems.Net.Numeral.TrySetValue(System.Collections.Generic.List{System.Int32})
  commentId: M:NumeralSystems.Net.Numeral.TrySetValue(System.Collections.Generic.List{System.Int32})
  id: TrySetValue(System.Collections.Generic.List{System.Int32})
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: TrySetValue(List<int>)
  nameWithType: Numeral.TrySetValue(List<int>)
  fullName: NumeralSystems.Net.Numeral.TrySetValue(System.Collections.Generic.List<int>)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: TrySetValue
    path: NumeralSystems.Net/Numeral.cs
    startLine: 178
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Tries to set the value of the Numeral object using the provided list of integers as indices.
  example: []
  syntax:
    content: public bool TrySetValue(List<int> value)
    parameters:
    - id: value
      type: System.Collections.Generic.List{System.Int32}
      description: The list of integer indices representing a value in the NumeralSystem
    return:
      type: System.Boolean
      description: True if the value was set successfully, false otherwise
    content.vb: Public Function TrySetValue(value As List(Of Integer)) As Boolean
  overload: NumeralSystems.Net.Numeral.TrySetValue*
  nameWithType.vb: Numeral.TrySetValue(List(Of Integer))
  fullName.vb: NumeralSystems.Net.Numeral.TrySetValue(System.Collections.Generic.List(Of Integer))
  name.vb: TrySetValue(List(Of Integer))
- uid: NumeralSystems.Net.Numeral.Integer
  commentId: P:NumeralSystems.Net.Numeral.Integer
  id: Integer
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Integer
  nameWithType: Numeral.Integer
  fullName: NumeralSystems.Net.Numeral.Integer
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Integer
    path: NumeralSystems.Net/Numeral.cs
    startLine: 188
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Represents a numeral value in a specific numeral system.
  example: []
  syntax:
    content: public int Integer { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property [Integer] As Integer
  overload: NumeralSystems.Net.Numeral.Integer*
- uid: NumeralSystems.Net.Numeral.Char
  commentId: P:NumeralSystems.Net.Numeral.Char
  id: Char
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Char
  nameWithType: Numeral.Char
  fullName: NumeralSystems.Net.Numeral.Char
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Char
    path: NumeralSystems.Net/Numeral.cs
    startLine: 205
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Represents a numeral in a specific numeral system.
  example: []
  syntax:
    content: public char Char { get; set; }
    parameters: []
    return:
      type: System.Char
    content.vb: Public Property [Char] As Char
  overload: NumeralSystems.Net.Numeral.Char*
- uid: NumeralSystems.Net.Numeral.Double
  commentId: P:NumeralSystems.Net.Numeral.Double
  id: Double
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Double
  nameWithType: Numeral.Double
  fullName: NumeralSystems.Net.Numeral.Double
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Double
    path: NumeralSystems.Net/Numeral.cs
    startLine: 226
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Represents a double-precision floating-point number.
  remarks: >-
    The Double property is used to get or set the value of the Numeral in the form of a double-precision floating-point number.

    It converts the Numeral to a double value and vice versa.
  example: []
  syntax:
    content: public double Double { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property [Double] As Double
  overload: NumeralSystems.Net.Numeral.Double*
- uid: NumeralSystems.Net.Numeral.Decimal
  commentId: P:NumeralSystems.Net.Numeral.Decimal
  id: Decimal
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Decimal
  nameWithType: Numeral.Decimal
  fullName: NumeralSystems.Net.Numeral.Decimal
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Decimal
    path: NumeralSystems.Net/Numeral.cs
    startLine: 241
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Represents a numeral in a number system.
  example: []
  syntax:
    content: public decimal Decimal { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property [Decimal] As Decimal
  overload: NumeralSystems.Net.Numeral.Decimal*
- uid: NumeralSystems.Net.Numeral.Float
  commentId: P:NumeralSystems.Net.Numeral.Float
  id: Float
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Float
  nameWithType: Numeral.Float
  fullName: NumeralSystems.Net.Numeral.Float
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Float
    path: NumeralSystems.Net/Numeral.cs
    startLine: 277
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Represents a numeral object that can store and manipulate numbers in different numeral systems.
  example: []
  syntax:
    content: public float Float { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Float As Single
  overload: NumeralSystems.Net.Numeral.Float*
- uid: NumeralSystems.Net.Numeral.Bytes
  commentId: P:NumeralSystems.Net.Numeral.Bytes
  id: Bytes
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: Bytes
  nameWithType: Numeral.Bytes
  fullName: NumeralSystems.Net.Numeral.Bytes
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Bytes
    path: NumeralSystems.Net/Numeral.cs
    startLine: 286
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Gets or sets the byte array representation of the Numeral value.
  example: []
  syntax:
    content: public byte[] Bytes { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Bytes As Byte()
  overload: NumeralSystems.Net.Numeral.Bytes*
- uid: NumeralSystems.Net.Numeral.To(NumeralSystems.Net.NumeralSystem)
  commentId: M:NumeralSystems.Net.Numeral.To(NumeralSystems.Net.NumeralSystem)
  id: To(NumeralSystems.Net.NumeralSystem)
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: To(NumeralSystem)
  nameWithType: Numeral.To(NumeralSystem)
  fullName: NumeralSystems.Net.Numeral.To(NumeralSystems.Net.NumeralSystem)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: To
    path: NumeralSystems.Net/Numeral.cs
    startLine: 341
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Converts the numerical value of the Numeral object to the specified numeral system.
  example: []
  syntax:
    content: public Numeral To(NumeralSystem baseSystem)
    parameters:
    - id: baseSystem
      type: NumeralSystems.Net.NumeralSystem
      description: The target numeral system to convert the value to.
    return:
      type: NumeralSystems.Net.Numeral
      description: A new Numeral object representing the converted value in the specified numeral system.
    content.vb: Public Function [To](baseSystem As NumeralSystem) As Numeral
  overload: NumeralSystems.Net.Numeral.To*
- uid: NumeralSystems.Net.Numeral.ToString(System.Collections.Generic.IList{System.String},System.String,System.String,System.String)
  commentId: M:NumeralSystems.Net.Numeral.ToString(System.Collections.Generic.IList{System.String},System.String,System.String,System.String)
  id: ToString(System.Collections.Generic.IList{System.String},System.String,System.String,System.String)
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: ToString(IList<string>, string, string, string)
  nameWithType: Numeral.ToString(IList<string>, string, string, string)
  fullName: NumeralSystems.Net.Numeral.ToString(System.Collections.Generic.IList<string>, string, string, string)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToString
    path: NumeralSystems.Net/Numeral.cs
    startLine: 346
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Represents a numeral in a specific numeral system.
  example: []
  syntax:
    content: public string ToString(IList<string> identity, string separator, string negativeSign, string numberDecimalSeparator)
    parameters:
    - id: identity
      type: System.Collections.Generic.IList{System.String}
    - id: separator
      type: System.String
    - id: negativeSign
      type: System.String
    - id: numberDecimalSeparator
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(identity As IList(Of String), separator As String, negativeSign As String, numberDecimalSeparator As String) As String
  overload: NumeralSystems.Net.Numeral.ToString*
  nameWithType.vb: Numeral.ToString(IList(Of String), String, String, String)
  fullName.vb: NumeralSystems.Net.Numeral.ToString(System.Collections.Generic.IList(Of String), String, String, String)
  name.vb: ToString(IList(Of String), String, String, String)
- uid: NumeralSystems.Net.Numeral.ToString
  commentId: M:NumeralSystems.Net.Numeral.ToString
  id: ToString
  parent: NumeralSystems.Net.Numeral
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Numeral.ToString()
  fullName: NumeralSystems.Net.Numeral.ToString()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Numeral.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToString
    path: NumeralSystems.Net/Numeral.cs
    startLine: 358
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net
  summary: Returns a string that represents the current object in a specific format using the default identity, separator, negative sign, and number decimal separator.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NumeralSystems.Net.Numeral.ToString*
references:
- uid: NumeralSystems.Net
  commentId: N:NumeralSystems.Net
  href: NumeralSystems.html
  name: NumeralSystems.Net
  nameWithType: NumeralSystems.Net
  fullName: NumeralSystems.Net
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NumeralSystems.Net.Numeral.Positive*
  commentId: Overload:NumeralSystems.Net.Numeral.Positive
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_Positive
  name: Positive
  nameWithType: Numeral.Positive
  fullName: NumeralSystems.Net.Numeral.Positive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NumeralSystems.Net.Numeral.Base*
  commentId: Overload:NumeralSystems.Net.Numeral.Base
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_Base
  name: Base
  nameWithType: Numeral.Base
  fullName: NumeralSystems.Net.Numeral.Base
- uid: NumeralSystems.Net.NumeralSystem
  commentId: T:NumeralSystems.Net.NumeralSystem
  parent: NumeralSystems.Net
  href: NumeralSystems.Net.NumeralSystem.html
  name: NumeralSystem
  nameWithType: NumeralSystem
  fullName: NumeralSystems.Net.NumeralSystem
- uid: NumeralSystems.Net.Numeral.FractionalIndices*
  commentId: Overload:NumeralSystems.Net.Numeral.FractionalIndices
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_FractionalIndices
  name: FractionalIndices
  nameWithType: Numeral.FractionalIndices
  fullName: NumeralSystems.Net.Numeral.FractionalIndices
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NumeralSystems.Net.Numeral.GetFractionalStrings*
  commentId: Overload:NumeralSystems.Net.Numeral.GetFractionalStrings
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_GetFractionalStrings_System_Collections_Generic_IList_System_String__
  name: GetFractionalStrings
  nameWithType: Numeral.GetFractionalStrings
  fullName: NumeralSystems.Net.Numeral.GetFractionalStrings
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<string>
  nameWithType: IList<string>
  fullName: System.Collections.Generic.IList<string>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NumeralSystems.Net.Numeral.GetFractionalString*
  commentId: Overload:NumeralSystems.Net.Numeral.GetFractionalString
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_GetFractionalString_System_Collections_Generic_IList_System_String__System_String_
  name: GetFractionalString
  nameWithType: Numeral.GetFractionalString
  fullName: NumeralSystems.Net.Numeral.GetFractionalString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NumeralSystems.Net.Numeral.IntegralIndices*
  commentId: Overload:NumeralSystems.Net.Numeral.IntegralIndices
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_IntegralIndices
  name: IntegralIndices
  nameWithType: Numeral.IntegralIndices
  fullName: NumeralSystems.Net.Numeral.IntegralIndices
- uid: NumeralSystems.Net.Numeral.GetIntegralStrings*
  commentId: Overload:NumeralSystems.Net.Numeral.GetIntegralStrings
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_GetIntegralStrings_System_Collections_Generic_IList_System_String__
  name: GetIntegralStrings
  nameWithType: Numeral.GetIntegralStrings
  fullName: NumeralSystems.Net.Numeral.GetIntegralStrings
- uid: NumeralSystems.Net.Numeral.GetIntegralString*
  commentId: Overload:NumeralSystems.Net.Numeral.GetIntegralString
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_GetIntegralString_System_Collections_Generic_IList_System_String__System_String_
  name: GetIntegralString
  nameWithType: Numeral.GetIntegralString
  fullName: NumeralSystems.Net.Numeral.GetIntegralString
- uid: NumeralSystems.Net.Numeral.#ctor*
  commentId: Overload:NumeralSystems.Net.Numeral.#ctor
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral__ctor
  name: Numeral
  nameWithType: Numeral.Numeral
  fullName: NumeralSystems.Net.Numeral.Numeral
  nameWithType.vb: Numeral.New
  fullName.vb: NumeralSystems.Net.Numeral.New
  name.vb: New
- uid: NumeralSystems.Net.Numeral.TrySetValue*
  commentId: Overload:NumeralSystems.Net.Numeral.TrySetValue
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_TrySetValue_System_Collections_Generic_List_System_Int32__
  name: TrySetValue
  nameWithType: Numeral.TrySetValue
  fullName: NumeralSystems.Net.Numeral.TrySetValue
- uid: NumeralSystems.Net.Numeral.Integer*
  commentId: Overload:NumeralSystems.Net.Numeral.Integer
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_Integer
  name: Integer
  nameWithType: Numeral.Integer
  fullName: NumeralSystems.Net.Numeral.Integer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NumeralSystems.Net.Numeral.Char*
  commentId: Overload:NumeralSystems.Net.Numeral.Char
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_Char
  name: Char
  nameWithType: Numeral.Char
  fullName: NumeralSystems.Net.Numeral.Char
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: NumeralSystems.Net.Numeral.Double*
  commentId: Overload:NumeralSystems.Net.Numeral.Double
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_Double
  name: Double
  nameWithType: Numeral.Double
  fullName: NumeralSystems.Net.Numeral.Double
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: NumeralSystems.Net.Numeral.Decimal*
  commentId: Overload:NumeralSystems.Net.Numeral.Decimal
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_Decimal
  name: Decimal
  nameWithType: Numeral.Decimal
  fullName: NumeralSystems.Net.Numeral.Decimal
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: NumeralSystems.Net.Numeral.Float*
  commentId: Overload:NumeralSystems.Net.Numeral.Float
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_Float
  name: Float
  nameWithType: Numeral.Float
  fullName: NumeralSystems.Net.Numeral.Float
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: NumeralSystems.Net.Numeral.Bytes*
  commentId: Overload:NumeralSystems.Net.Numeral.Bytes
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_Bytes
  name: Bytes
  nameWithType: Numeral.Bytes
  fullName: NumeralSystems.Net.Numeral.Bytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: NumeralSystems.Net.Numeral.To*
  commentId: Overload:NumeralSystems.Net.Numeral.To
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_To_NumeralSystems_Net_NumeralSystem_
  name: To
  nameWithType: Numeral.To
  fullName: NumeralSystems.Net.Numeral.To
- uid: NumeralSystems.Net.Numeral
  commentId: T:NumeralSystems.Net.Numeral
  parent: NumeralSystems.Net
  href: NumeralSystems.Net.Numeral.html
  name: Numeral
  nameWithType: Numeral
  fullName: NumeralSystems.Net.Numeral
- uid: NumeralSystems.Net.Numeral.ToString*
  commentId: Overload:NumeralSystems.Net.Numeral.ToString
  href: NumeralSystems.Net.Numeral.html#NumeralSystems_Net_Numeral_ToString_System_Collections_Generic_IList_System_String__System_String_System_String_System_String_
  name: ToString
  nameWithType: Numeral.ToString
  fullName: NumeralSystems.Net.Numeral.ToString
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
