### YamlMime:ManagedReference
items:
- uid: NumeralSystems.Net.Type.Base.Byte
  commentId: T:NumeralSystems.Net.Type.Base.Byte
  id: Byte
  parent: NumeralSystems.Net.Type.Base
  children:
  - NumeralSystems.Net.Type.Base.Byte.And(NumeralSystems.Net.Type.Base.Byte)
  - NumeralSystems.Net.Type.Base.Byte.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  - NumeralSystems.Net.Type.Base.Byte.Binary
  - NumeralSystems.Net.Type.Base.Byte.BitLength
  - NumeralSystems.Net.Type.Base.Byte.Bytes
  - NumeralSystems.Net.Type.Base.Byte.Incomplete
  - NumeralSystems.Net.Type.Base.Byte.Item(System.Int32)
  - NumeralSystems.Net.Type.Base.Byte.Nand(NumeralSystems.Net.Type.Base.Byte)
  - NumeralSystems.Net.Type.Base.Byte.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  - NumeralSystems.Net.Type.Base.Byte.Not
  - NumeralSystems.Net.Type.Base.Byte.Or(NumeralSystems.Net.Type.Base.Byte)
  - NumeralSystems.Net.Type.Base.Byte.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  - NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  - NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  - NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  - NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  - NumeralSystems.Net.Type.Base.Byte.ToString
  - NumeralSystems.Net.Type.Base.Byte.ToString(System.String)
  - NumeralSystems.Net.Type.Base.Byte.Value
  - NumeralSystems.Net.Type.Base.Byte.Xor(NumeralSystems.Net.Type.Base.Byte)
  - NumeralSystems.Net.Type.Base.Byte.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  langs:
  - csharp
  - vb
  name: Byte
  nameWithType: Byte
  fullName: NumeralSystems.Net.Type.Base.Byte
  type: Class
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Byte
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 10
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Class representing a byte.
  example: []
  syntax:
    content: 'public sealed class Byte : IRegularOperable<IncompleteByte, Byte, byte, uint>, IIncompletable<IncompleteByte, Byte, byte, uint>, INumeralValue<byte>, IRegularReversible<IncompleteByte, Byte, byte, uint>'
    content.vb: Public NotInheritable Class [Byte] Implements IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger), IIncompletable(Of IncompleteByte, Byte, Byte, UInteger), INumeralValue(Of Byte), IRegularReversible(Of IncompleteByte, Byte, Byte, UInteger)
  inheritance:
  - System.Object
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  - NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  - NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NumeralSystems.Net.Type.Base.Byte.Value
  commentId: P:NumeralSystems.Net.Type.Base.Byte.Value
  id: Value
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Byte.Value
  fullName: NumeralSystems.Net.Type.Base.Byte.Value
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Value
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 15
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Value of the byte.
  example: []
  syntax:
    content: public byte Value { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Property Value As Byte
  overload: NumeralSystems.Net.Type.Base.Byte.Value*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Value
- uid: NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  id: ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: ReverseAnd(Byte, out IncompleteByte)
  nameWithType: Byte.ReverseAnd(Byte, out IncompleteByte)
  fullName: NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Base.Byte, out NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseAnd
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 23
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Reverse operation for the bitwise and operation.
  example: []
  syntax:
    content: public bool ReverseAnd(Byte right, out IncompleteByte result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Base.Byte
      description: Second parameter of the operation
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Result of the operation if any
    return:
      type: System.Boolean
      description: True if the operation was successful otherwise false
    content.vb: Public Function ReverseAnd(right As [Byte], result As IncompleteByte) As Boolean
  overload: NumeralSystems.Net.Type.Base.Byte.ReverseAnd*
  implements:
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  nameWithType.vb: Byte.ReverseAnd(Byte, IncompleteByte)
  fullName.vb: NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Base.Byte, NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  name.vb: ReverseAnd(Byte, IncompleteByte)
- uid: NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  id: ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: ReverseAnd(IncompleteByte, out IncompleteByte)
  nameWithType: Byte.ReverseAnd(IncompleteByte, out IncompleteByte)
  fullName: NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte, out NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseAnd
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 43
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Reverse operation for the bitwise and operation.
  example: []
  syntax:
    content: public bool ReverseAnd(IncompleteByte right, out IncompleteByte result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Second parameter of the operation
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Result of the operation if any
    return:
      type: System.Boolean
      description: True if the operation was successful otherwise false
    content.vb: Public Function ReverseAnd(right As IncompleteByte, result As IncompleteByte) As Boolean
  overload: NumeralSystems.Net.Type.Base.Byte.ReverseAnd*
  implements:
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  nameWithType.vb: Byte.ReverseAnd(IncompleteByte, IncompleteByte)
  fullName.vb: NumeralSystems.Net.Type.Base.Byte.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  name.vb: ReverseAnd(IncompleteByte, IncompleteByte)
- uid: NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  id: ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: ReverseOr(Byte, out IncompleteByte)
  nameWithType: Byte.ReverseOr(Byte, out IncompleteByte)
  fullName: NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Base.Byte, out NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseOr
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 63
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Reverse operation for the bitwise or operation.
  example: []
  syntax:
    content: public bool ReverseOr(Byte right, out IncompleteByte result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Base.Byte
      description: Second parameter of the operation
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Result of the operation if any
    return:
      type: System.Boolean
      description: True if the operation was successful otherwise false
    content.vb: Public Function ReverseOr(right As [Byte], result As IncompleteByte) As Boolean
  overload: NumeralSystems.Net.Type.Base.Byte.ReverseOr*
  implements:
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  nameWithType.vb: Byte.ReverseOr(Byte, IncompleteByte)
  fullName.vb: NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Base.Byte, NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  name.vb: ReverseOr(Byte, IncompleteByte)
- uid: NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  id: ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: ReverseOr(IncompleteByte, out IncompleteByte)
  nameWithType: Byte.ReverseOr(IncompleteByte, out IncompleteByte)
  fullName: NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte, out NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseOr
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 83
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Reverse operation for the bitwise or operation.
  example: []
  syntax:
    content: public bool ReverseOr(IncompleteByte right, out IncompleteByte result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Second parameter of the operation
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Result of the operation if any
    return:
      type: System.Boolean
      description: True if the operation was successful otherwise false
    content.vb: Public Function ReverseOr(right As IncompleteByte, result As IncompleteByte) As Boolean
  overload: NumeralSystems.Net.Type.Base.Byte.ReverseOr*
  implements:
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  nameWithType.vb: Byte.ReverseOr(IncompleteByte, IncompleteByte)
  fullName.vb: NumeralSystems.Net.Type.Base.Byte.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  name.vb: ReverseOr(IncompleteByte, IncompleteByte)
- uid: NumeralSystems.Net.Type.Base.Byte.Binary
  commentId: P:NumeralSystems.Net.Type.Base.Byte.Binary
  id: Binary
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Binary
  nameWithType: Byte.Binary
  fullName: NumeralSystems.Net.Type.Base.Byte.Binary
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Binary
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 100
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: The value of the numeral as a binary array.
  example: []
  syntax:
    content: public bool[] Binary { get; set; }
    parameters: []
    return:
      type: System.Boolean[]
    content.vb: Public Property Binary As Boolean()
  overload: NumeralSystems.Net.Type.Base.Byte.Binary*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Binary
- uid: NumeralSystems.Net.Type.Base.Byte.Item(System.Int32)
  commentId: P:NumeralSystems.Net.Type.Base.Byte.Item(System.Int32)
  id: Item(System.Int32)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Byte.this[int]
  fullName: NumeralSystems.Net.Type.Base.Byte.this[int]
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: this[]
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 110
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Get and set the value of the numeral at the given index.
  example: []
  syntax:
    content: public bool this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Index of the bit
    return:
      type: System.Boolean
    content.vb: Public Default Property this[](index As Integer) As Boolean
  overload: NumeralSystems.Net.Type.Base.Byte.Item*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Item(System.Int32)
  nameWithType.vb: Byte.this[](Integer)
  fullName.vb: NumeralSystems.Net.Type.Base.Byte.this[](Integer)
  name.vb: this[](Integer)
- uid: NumeralSystems.Net.Type.Base.Byte.Bytes
  commentId: P:NumeralSystems.Net.Type.Base.Byte.Bytes
  id: Bytes
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Bytes
  nameWithType: Byte.Bytes
  fullName: NumeralSystems.Net.Type.Base.Byte.Bytes
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Bytes
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 123
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: The value of the numeral as a byte array.
  example: []
  syntax:
    content: public byte[] Bytes { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Bytes As Byte()
  overload: NumeralSystems.Net.Type.Base.Byte.Bytes*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Bytes
- uid: NumeralSystems.Net.Type.Base.Byte.BitLength
  commentId: P:NumeralSystems.Net.Type.Base.Byte.BitLength
  id: BitLength
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: BitLength
  nameWithType: Byte.BitLength
  fullName: NumeralSystems.Net.Type.Base.Byte.BitLength
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: BitLength
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 132
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: The length of the numeral type in bits.
  example: []
  syntax:
    content: public int BitLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BitLength As Integer
  overload: NumeralSystems.Net.Type.Base.Byte.BitLength*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Byte}.BitLength
- uid: NumeralSystems.Net.Type.Base.Byte.Not
  commentId: M:NumeralSystems.Net.Type.Base.Byte.Not
  id: Not
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Not()
  nameWithType: Byte.Not()
  fullName: NumeralSystems.Net.Type.Base.Byte.Not()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Not
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 138
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise not operation.
  example: []
  syntax:
    content: public Byte Not()
    return:
      type: NumeralSystems.Net.Type.Base.Byte
      description: Bitwise not result
    content.vb: Public Function [Not]() As [Byte]
  overload: NumeralSystems.Net.Type.Base.Byte.Not*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Not
- uid: NumeralSystems.Net.Type.Base.Byte.Xor(NumeralSystems.Net.Type.Base.Byte)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.Xor(NumeralSystems.Net.Type.Base.Byte)
  id: Xor(NumeralSystems.Net.Type.Base.Byte)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Xor(Byte)
  nameWithType: Byte.Xor(Byte)
  fullName: NumeralSystems.Net.Type.Base.Byte.Xor(NumeralSystems.Net.Type.Base.Byte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 148
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise xor operation.
  example: []
  syntax:
    content: public Byte Xor(Byte value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Byte
      description: Second parameter of the operation
    return:
      type: NumeralSystems.Net.Type.Base.Byte
      description: Bitwise xor on the second parameter
    content.vb: Public Function [Xor](value As [Byte]) As [Byte]
  overload: NumeralSystems.Net.Type.Base.Byte.Xor*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.Byte)
- uid: NumeralSystems.Net.Type.Base.Byte.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  id: Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Xor(IncompleteByte)
  nameWithType: Byte.Xor(IncompleteByte)
  fullName: NumeralSystems.Net.Type.Base.Byte.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 158
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise xor operation.
  example: []
  syntax:
    content: public IncompleteByte Xor(IncompleteByte value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Second parameter of the operation
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Bitwise xor on the second parameter
    content.vb: Public Function [Xor](value As IncompleteByte) As IncompleteByte
  overload: NumeralSystems.Net.Type.Base.Byte.Xor*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
- uid: NumeralSystems.Net.Type.Base.Byte.And(NumeralSystems.Net.Type.Base.Byte)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.And(NumeralSystems.Net.Type.Base.Byte)
  id: And(NumeralSystems.Net.Type.Base.Byte)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: And(Byte)
  nameWithType: Byte.And(Byte)
  fullName: NumeralSystems.Net.Type.Base.Byte.And(NumeralSystems.Net.Type.Base.Byte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 168
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise and operation.
  example: []
  syntax:
    content: public Byte And(Byte value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Byte
      description: Second parameter of the operation
    return:
      type: NumeralSystems.Net.Type.Base.Byte
      description: Bitwise and on the second parameter
    content.vb: Public Function [And](value As [Byte]) As [Byte]
  overload: NumeralSystems.Net.Type.Base.Byte.And*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Base.Byte)
- uid: NumeralSystems.Net.Type.Base.Byte.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  id: And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: And(IncompleteByte)
  nameWithType: Byte.And(IncompleteByte)
  fullName: NumeralSystems.Net.Type.Base.Byte.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 178
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise and operation.
  example: []
  syntax:
    content: public IncompleteByte And(IncompleteByte value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Second parameter of the operation
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Bitwise and on the second parameter
    content.vb: Public Function [And](value As IncompleteByte) As IncompleteByte
  overload: NumeralSystems.Net.Type.Base.Byte.And*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
- uid: NumeralSystems.Net.Type.Base.Byte.Or(NumeralSystems.Net.Type.Base.Byte)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.Or(NumeralSystems.Net.Type.Base.Byte)
  id: Or(NumeralSystems.Net.Type.Base.Byte)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Or(Byte)
  nameWithType: Byte.Or(Byte)
  fullName: NumeralSystems.Net.Type.Base.Byte.Or(NumeralSystems.Net.Type.Base.Byte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 188
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise or operation.
  example: []
  syntax:
    content: public Byte Or(Byte value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Byte
      description: Second parameter of the operation
    return:
      type: NumeralSystems.Net.Type.Base.Byte
      description: Bitwise or on the second parameter
    content.vb: Public Function [Or](value As [Byte]) As [Byte]
  overload: NumeralSystems.Net.Type.Base.Byte.Or*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Base.Byte)
- uid: NumeralSystems.Net.Type.Base.Byte.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  id: Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Or(IncompleteByte)
  nameWithType: Byte.Or(IncompleteByte)
  fullName: NumeralSystems.Net.Type.Base.Byte.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 198
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise or operation.
  example: []
  syntax:
    content: public IncompleteByte Or(IncompleteByte value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Second parameter of the operation
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Bitwise or on the second parameter
    content.vb: Public Function [Or](value As IncompleteByte) As IncompleteByte
  overload: NumeralSystems.Net.Type.Base.Byte.Or*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
- uid: NumeralSystems.Net.Type.Base.Byte.Nand(NumeralSystems.Net.Type.Base.Byte)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.Nand(NumeralSystems.Net.Type.Base.Byte)
  id: Nand(NumeralSystems.Net.Type.Base.Byte)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Nand(Byte)
  nameWithType: Byte.Nand(Byte)
  fullName: NumeralSystems.Net.Type.Base.Byte.Nand(NumeralSystems.Net.Type.Base.Byte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Nand
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 208
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise nand operation.
  example: []
  syntax:
    content: public Byte Nand(Byte value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Byte
      description: Second parameter of the operation
    return:
      type: NumeralSystems.Net.Type.Base.Byte
      description: Bitwise nand on the second parameter
    content.vb: Public Function Nand(value As [Byte]) As [Byte]
  overload: NumeralSystems.Net.Type.Base.Byte.Nand*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Base.Byte)
- uid: NumeralSystems.Net.Type.Base.Byte.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  id: Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Nand(IncompleteByte)
  nameWithType: Byte.Nand(IncompleteByte)
  fullName: NumeralSystems.Net.Type.Base.Byte.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Nand
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 218
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Bitwise nand operation.
  example: []
  syntax:
    content: public IncompleteByte Nand(IncompleteByte value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Second parameter of the operation
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: Bitwise nand on the second parameter
    content.vb: Public Function Nand(value As IncompleteByte) As IncompleteByte
  overload: NumeralSystems.Net.Type.Base.Byte.Nand*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
- uid: NumeralSystems.Net.Type.Base.Byte.Incomplete
  commentId: M:NumeralSystems.Net.Type.Base.Byte.Incomplete
  id: Incomplete
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: Incomplete()
  nameWithType: Byte.Incomplete()
  fullName: NumeralSystems.Net.Type.Base.Byte.Incomplete()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Incomplete
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 227
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Gets the incomplete representation of the value.
  example: []
  syntax:
    content: public IncompleteByte Incomplete()
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte
      description: The source value as an incomplete value
    content.vb: Public Function Incomplete() As IncompleteByte
  overload: NumeralSystems.Net.Type.Base.Byte.Incomplete*
  implements:
  - NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Incomplete
- uid: NumeralSystems.Net.Type.Base.Byte.ToString
  commentId: M:NumeralSystems.Net.Type.Base.Byte.ToString
  id: ToString
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Byte.ToString()
  fullName: NumeralSystems.Net.Type.Base.Byte.ToString()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToString
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 236
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Gets the value of the numeral as a string of 1s and 0s.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The value of the numeral as a string of 1s and 0s.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NumeralSystems.Net.Type.Base.Byte.ToString*
- uid: NumeralSystems.Net.Type.Base.Byte.ToString(System.String)
  commentId: M:NumeralSystems.Net.Type.Base.Byte.ToString(System.String)
  id: ToString(System.String)
  parent: NumeralSystems.Net.Type.Base.Byte
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Byte.ToString(string)
  fullName: NumeralSystems.Net.Type.Base.Byte.ToString(string)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Byte.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToString
    path: NumeralSystems.Net/Type/Base/Byte.cs
    startLine: 243
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Gets the value of the numeral as a string formatted with the given input.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: Formatter for the value
    return:
      type: System.String
      description: The value of the numeral as a string formatted with the given input
    content.vb: Public Function ToString(format As String) As String
  overload: NumeralSystems.Net.Type.Base.Byte.ToString*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Byte}.ToString(System.String)
  nameWithType.vb: Byte.ToString(String)
  fullName.vb: NumeralSystems.Net.Type.Base.Byte.ToString(String)
  name.vb: ToString(String)
references:
- uid: NumeralSystems.Net.Type.Base
  commentId: N:NumeralSystems.Net.Type.Base
  href: NumeralSystems.html
  name: NumeralSystems.Net.Type.Base
  nameWithType: NumeralSystems.Net.Type.Base
  fullName: NumeralSystems.Net.Type.Base
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Base
    name: Base
    href: NumeralSystems.Net.Type.Base.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Base
    name: Base
    href: NumeralSystems.Net.Type.Base.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  commentId: T:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IRegularOperable`4
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  name: IRegularOperable<IncompleteByte, Byte, byte, uint>
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger)
  name.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4
    name: IRegularOperable
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4
    name: IRegularOperable
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  commentId: T:NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IIncompletable`4
  href: NumeralSystems.Net.Interface.IIncompletable-4.html
  name: IIncompletable<IncompleteByte, Byte, byte, uint>
  nameWithType: IIncompletable<IncompleteByte, Byte, byte, uint>
  fullName: NumeralSystems.Net.Interface.IIncompletable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>
  nameWithType.vb: IIncompletable(Of IncompleteByte, Byte, Byte, UInteger)
  fullName.vb: NumeralSystems.Net.Interface.IIncompletable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger)
  name.vb: IIncompletable(Of IncompleteByte, Byte, Byte, UInteger)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4
    name: IIncompletable
    href: NumeralSystems.Net.Interface.IIncompletable-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4
    name: IIncompletable
    href: NumeralSystems.Net.Interface.IIncompletable-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  commentId: T:NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.INumeralValue`1
  href: NumeralSystems.Net.Interface.INumeralValue-1.html
  name: INumeralValue<byte>
  nameWithType: INumeralValue<byte>
  fullName: NumeralSystems.Net.Interface.INumeralValue<byte>
  nameWithType.vb: INumeralValue(Of Byte)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Byte)
  name.vb: INumeralValue(Of Byte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1
    name: INumeralValue
    href: NumeralSystems.Net.Interface.INumeralValue-1.html
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1
    name: INumeralValue
    href: NumeralSystems.Net.Interface.INumeralValue-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  commentId: T:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IRegularReversible`4
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  name: IRegularReversible<IncompleteByte, Byte, byte, uint>
  nameWithType: IRegularReversible<IncompleteByte, Byte, byte, uint>
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>
  nameWithType.vb: IRegularReversible(Of IncompleteByte, Byte, Byte, UInteger)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger)
  name.vb: IRegularReversible(Of IncompleteByte, Byte, Byte, UInteger)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4
    name: IRegularReversible
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4
    name: IRegularReversible
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NumeralSystems.Net.Interface.IRegularOperable`4
  commentId: T:NumeralSystems.Net.Interface.IRegularOperable`4
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  name: IRegularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer)
  name.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4
    name: IRegularOperable
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4
    name: IRegularOperable
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface
  commentId: N:NumeralSystems.Net.Interface
  href: NumeralSystems.html
  name: NumeralSystems.Net.Interface
  nameWithType: NumeralSystems.Net.Interface
  fullName: NumeralSystems.Net.Interface
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
- uid: NumeralSystems.Net.Interface.IIncompletable`4
  commentId: T:NumeralSystems.Net.Interface.IIncompletable`4
  href: NumeralSystems.Net.Interface.IIncompletable-4.html
  name: IIncompletable<TIncomplete, TValue, TType, TIndexer>
  nameWithType: IIncompletable<TIncomplete, TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIncompletable<TIncomplete, TValue, TType, TIndexer>
  nameWithType.vb: IIncompletable(Of TIncomplete, TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompletable(Of TIncomplete, TValue, TType, TIndexer)
  name.vb: IIncompletable(Of TIncomplete, TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4
    name: IIncompletable
    href: NumeralSystems.Net.Interface.IIncompletable-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4
    name: IIncompletable
    href: NumeralSystems.Net.Interface.IIncompletable-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue`1
  commentId: T:NumeralSystems.Net.Interface.INumeralValue`1
  href: NumeralSystems.Net.Interface.INumeralValue-1.html
  name: INumeralValue<TValue>
  nameWithType: INumeralValue<TValue>
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>
  nameWithType.vb: INumeralValue(Of TValue)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue)
  name.vb: INumeralValue(Of TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1
    name: INumeralValue
    href: NumeralSystems.Net.Interface.INumeralValue-1.html
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1
    name: INumeralValue
    href: NumeralSystems.Net.Interface.INumeralValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible`4
  commentId: T:NumeralSystems.Net.Interface.IRegularReversible`4
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  name: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer)
  name.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4
    name: IRegularReversible
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4
    name: IRegularReversible
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.Value*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Value
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Value
  name: Value
  nameWithType: Byte.Value
  fullName: NumeralSystems.Net.Type.Base.Byte.Value
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Value
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Value
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.Value
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Value
  name: Value
  nameWithType: INumeralValue<byte>.Value
  fullName: NumeralSystems.Net.Interface.INumeralValue<byte>.Value
  nameWithType.vb: INumeralValue(Of Byte).Value
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Byte).Value
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: NumeralSystems.Net.Interface.INumeralValue`1.Value
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.Value
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Value
  name: Value
  nameWithType: INumeralValue<TValue>.Value
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.Value
  nameWithType.vb: INumeralValue(Of TValue).Value
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).Value
- uid: NumeralSystems.Net.Type.Base.Byte.ReverseAnd*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.ReverseAnd
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_ReverseAnd_NumeralSystems_Net_Type_Base_Byte_NumeralSystems_Net_Type_Incomplete_IncompleteByte__
  name: ReverseAnd
  nameWithType: Byte.ReverseAnd
  fullName: NumeralSystems.Net.Type.Base.Byte.ReverseAnd
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  parent: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(Byte, out IncompleteByte)
  nameWithType: IRegularReversible<IncompleteByte, Byte, byte, uint>.ReverseAnd(Byte, out IncompleteByte)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.ReverseAnd(NumeralSystems.Net.Type.Base.Byte, out NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  nameWithType.vb: IRegularReversible(Of IncompleteByte, Byte, Byte, UInteger).ReverseAnd(Byte, IncompleteByte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).ReverseAnd(NumeralSystems.Net.Type.Base.Byte, NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  name.vb: ReverseAnd(Byte, IncompleteByte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte
  commentId: T:NumeralSystems.Net.Type.Base.Byte
  parent: NumeralSystems.Net.Type.Base
  href: NumeralSystems.Net.Type.Base.Byte.html
  name: Byte
  nameWithType: Byte
  fullName: NumeralSystems.Net.Type.Base.Byte
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
  commentId: T:NumeralSystems.Net.Type.Incomplete.IncompleteByte
  parent: NumeralSystems.Net.Type.Incomplete
  href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  name: IncompleteByte
  nameWithType: IncompleteByte
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteByte
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(TNumaralValue, out TIncomplete)
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseAnd(TNumaralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseAnd(TNumaralValue, out TIncomplete)
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseAnd(TNumaralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseAnd(TNumaralValue, TIncomplete)
  name.vb: ReverseAnd(TNumaralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete
  commentId: N:NumeralSystems.Net.Type.Incomplete
  href: NumeralSystems.html
  name: NumeralSystems.Net.Type.Incomplete
  nameWithType: NumeralSystems.Net.Type.Incomplete
  fullName: NumeralSystems.Net.Type.Incomplete
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Type.Incomplete.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Type.Incomplete.html
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  parent: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(IncompleteByte, out IncompleteByte)
  nameWithType: IRegularReversible<IncompleteByte, Byte, byte, uint>.ReverseAnd(IncompleteByte, out IncompleteByte)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte, out NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  nameWithType.vb: IRegularReversible(Of IncompleteByte, Byte, Byte, UInteger).ReverseAnd(IncompleteByte, IncompleteByte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  name.vb: ReverseAnd(IncompleteByte, IncompleteByte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  name.vb: ReverseAnd(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.ReverseOr*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.ReverseOr
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_ReverseOr_NumeralSystems_Net_Type_Base_Byte_NumeralSystems_Net_Type_Incomplete_IncompleteByte__
  name: ReverseOr
  nameWithType: Byte.ReverseOr
  fullName: NumeralSystems.Net.Type.Base.Byte.ReverseOr
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  parent: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  name: ReverseOr(Byte, out IncompleteByte)
  nameWithType: IRegularReversible<IncompleteByte, Byte, byte, uint>.ReverseOr(Byte, out IncompleteByte)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.ReverseOr(NumeralSystems.Net.Type.Base.Byte, out NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  nameWithType.vb: IRegularReversible(Of IncompleteByte, Byte, Byte, UInteger).ReverseOr(Byte, IncompleteByte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).ReverseOr(NumeralSystems.Net.Type.Base.Byte, NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  name.vb: ReverseOr(Byte, IncompleteByte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.Byte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  name: ReverseOr(TNumaralValue, out TIncomplete)
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseOr(TNumaralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseOr(TNumaralValue, out TIncomplete)
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseOr(TNumaralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseOr(TNumaralValue, TIncomplete)
  name.vb: ReverseOr(TNumaralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
  parent: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  name: ReverseOr(IncompleteByte, out IncompleteByte)
  nameWithType: IRegularReversible<IncompleteByte, Byte, byte, uint>.ReverseOr(IncompleteByte, out IncompleteByte)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte, out NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  nameWithType.vb: IRegularReversible(Of IncompleteByte, Byte, Byte, UInteger).ReverseOr(IncompleteByte, IncompleteByte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  name.vb: ReverseOr(IncompleteByte, IncompleteByte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Incomplete.IncompleteByte@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  name: ReverseOr(TIncomplete, out TIncomplete)
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  name.vb: ReverseOr(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.Binary*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Binary
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Binary
  name: Binary
  nameWithType: Byte.Binary
  fullName: NumeralSystems.Net.Type.Base.Byte.Binary
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Binary
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Binary
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.Binary
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Binary
  name: Binary
  nameWithType: INumeralValue<byte>.Binary
  fullName: NumeralSystems.Net.Interface.INumeralValue<byte>.Binary
  nameWithType.vb: INumeralValue(Of Byte).Binary
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Byte).Binary
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue`1.Binary
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.Binary
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Binary
  name: Binary
  nameWithType: INumeralValue<TValue>.Binary
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.Binary
  nameWithType.vb: INumeralValue(Of TValue).Binary
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).Binary
- uid: NumeralSystems.Net.Type.Base.Byte.Item*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Item
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Item_System_Int32_
  name: this
  nameWithType: Byte.this
  fullName: NumeralSystems.Net.Type.Base.Byte.this
  nameWithType.vb: Byte.this[]
  fullName.vb: NumeralSystems.Net.Type.Base.Byte.this[]
  name.vb: this[]
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Item(System.Int32)
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Item(System.Int32)
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: INumeralValue<byte>.this[int]
  fullName: NumeralSystems.Net.Interface.INumeralValue<byte>.this[int]
  nameWithType.vb: INumeralValue(Of Byte).this[](Integer)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Byte).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Item(System.Int32)
    name: this[]
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Item_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NumeralSystems.Net.Interface.INumeralValue`1.Item(System.Int32)
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: INumeralValue<TValue>.this[int]
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.this[int]
  nameWithType.vb: INumeralValue(Of TValue).this[](Integer)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1.Item(System.Int32)
    name: this[]
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Item_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.Bytes*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Bytes
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Bytes
  name: Bytes
  nameWithType: Byte.Bytes
  fullName: NumeralSystems.Net.Type.Base.Byte.Bytes
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Bytes
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Byte}.Bytes
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.Bytes
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Bytes
  name: Bytes
  nameWithType: INumeralValue<byte>.Bytes
  fullName: NumeralSystems.Net.Interface.INumeralValue<byte>.Bytes
  nameWithType.vb: INumeralValue(Of Byte).Bytes
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Byte).Bytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue`1.Bytes
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.Bytes
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Bytes
  name: Bytes
  nameWithType: INumeralValue<TValue>.Bytes
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.Bytes
  nameWithType.vb: INumeralValue(Of TValue).Bytes
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).Bytes
- uid: NumeralSystems.Net.Type.Base.Byte.BitLength*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.BitLength
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_BitLength
  name: BitLength
  nameWithType: Byte.BitLength
  fullName: NumeralSystems.Net.Type.Base.Byte.BitLength
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.BitLength
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Byte}.BitLength
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.BitLength
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_BitLength
  name: BitLength
  nameWithType: INumeralValue<byte>.BitLength
  fullName: NumeralSystems.Net.Interface.INumeralValue<byte>.BitLength
  nameWithType.vb: INumeralValue(Of Byte).BitLength
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Byte).BitLength
- uid: NumeralSystems.Net.Interface.INumeralValue`1.BitLength
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.BitLength
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_BitLength
  name: BitLength
  nameWithType: INumeralValue<TValue>.BitLength
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.BitLength
  nameWithType.vb: INumeralValue(Of TValue).BitLength
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).BitLength
- uid: NumeralSystems.Net.Type.Base.Byte.Not*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Not
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Not
  name: Not
  nameWithType: Byte.Not
  fullName: NumeralSystems.Net.Type.Base.Byte.Not
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Not
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Not
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Not
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  name: Not()
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.Not()
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.Not()
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).Not()
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).Not()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Not
    name: Not
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Not
    name: Not
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Not
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Not
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  name: Not()
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Not
    name: Not
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Not
    name: Not
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.Xor*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Xor
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Xor_NumeralSystems_Net_Type_Base_Byte_
  name: Xor
  nameWithType: Byte.Xor
  fullName: NumeralSystems.Net.Type.Base.Byte.Xor
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.Byte)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.Byte)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  name: Xor(Byte)
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.Xor(Byte)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.Xor(NumeralSystems.Net.Type.Base.Byte)
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).Xor(Byte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).Xor(NumeralSystems.Net.Type.Base.Byte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.Byte)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.Byte)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  name: Xor(TValue)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  name: Xor(IncompleteByte)
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.Xor(IncompleteByte)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).Xor(IncompleteByte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  name: Xor(TIncomplete)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.And*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.And
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_And_NumeralSystems_Net_Type_Base_Byte_
  name: And
  nameWithType: Byte.And
  fullName: NumeralSystems.Net.Type.Base.Byte.And
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Base.Byte)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Base.Byte)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  name: And(Byte)
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.And(Byte)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.And(NumeralSystems.Net.Type.Base.Byte)
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).And(Byte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).And(NumeralSystems.Net.Type.Base.Byte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Base.Byte)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Base.Byte)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  name: And(TValue)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  name: And(IncompleteByte)
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.And(IncompleteByte)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).And(IncompleteByte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  name: And(TIncomplete)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.Or*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Or
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Or_NumeralSystems_Net_Type_Base_Byte_
  name: Or
  nameWithType: Byte.Or
  fullName: NumeralSystems.Net.Type.Base.Byte.Or
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Base.Byte)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Base.Byte)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  name: Or(Byte)
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.Or(Byte)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.Or(NumeralSystems.Net.Type.Base.Byte)
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).Or(Byte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).Or(NumeralSystems.Net.Type.Base.Byte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Base.Byte)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Base.Byte)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  name: Or(TValue)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  name: Or(IncompleteByte)
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.Or(IncompleteByte)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).Or(IncompleteByte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  name: Or(TIncomplete)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.Nand*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Nand
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Nand_NumeralSystems_Net_Type_Base_Byte_
  name: Nand
  nameWithType: Byte.Nand
  fullName: NumeralSystems.Net.Type.Base.Byte.Nand
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Base.Byte)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Base.Byte)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  name: Nand(Byte)
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.Nand(Byte)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.Nand(NumeralSystems.Net.Type.Base.Byte)
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).Nand(Byte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).Nand(NumeralSystems.Net.Type.Base.Byte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Base.Byte)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Base.Byte)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Byte
    name: Byte
    href: NumeralSystems.Net.Type.Base.Byte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  name: Nand(TValue)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Nand(TValue)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Nand(TValue)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Nand(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Nand(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  name: Nand(IncompleteByte)
  nameWithType: IRegularOperable<IncompleteByte, Byte, byte, uint>.Nand(IncompleteByte)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  nameWithType.vb: IRegularOperable(Of IncompleteByte, Byte, Byte, UInteger).Nand(IncompleteByte)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteByte)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  name: Nand(TIncomplete)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Nand(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Nand(TIncomplete)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Nand(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Nand(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.Incomplete*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.Incomplete
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_Incomplete
  name: Incomplete
  nameWithType: Byte.Incomplete
  fullName: NumeralSystems.Net.Type.Base.Byte.Incomplete
- uid: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Incomplete
  commentId: M:NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Incomplete
  parent: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
  href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  name: Incomplete()
  nameWithType: IIncompletable<IncompleteByte, Byte, byte, uint>.Incomplete()
  fullName: NumeralSystems.Net.Interface.IIncompletable<NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, byte, uint>.Incomplete()
  nameWithType.vb: IIncompletable(Of IncompleteByte, Byte, Byte, UInteger).Incomplete()
  fullName.vb: NumeralSystems.Net.Interface.IIncompletable(Of NumeralSystems.Net.Type.Incomplete.IncompleteByte, NumeralSystems.Net.Type.Base.Byte, Byte, UInteger).Incomplete()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteByte,NumeralSystems.Net.Type.Base.Byte,System.Byte,System.UInt32}.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
  commentId: M:NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
  href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  name: Incomplete()
  nameWithType: IIncompletable<TIncomplete, TValue, TType, TIndexer>.Incomplete()
  fullName: NumeralSystems.Net.Interface.IIncompletable<TIncomplete, TValue, TType, TIndexer>.Incomplete()
  nameWithType.vb: IIncompletable(Of TIncomplete, TValue, TType, TIndexer).Incomplete()
  fullName.vb: NumeralSystems.Net.Interface.IIncompletable(Of TIncomplete, TValue, TType, TIndexer).Incomplete()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Base.Byte.ToString*
  commentId: Overload:NumeralSystems.Net.Type.Base.Byte.ToString
  href: NumeralSystems.Net.Type.Base.Byte.html#NumeralSystems_Net_Type_Base_Byte_ToString
  name: ToString
  nameWithType: Byte.ToString
  fullName: NumeralSystems.Net.Type.Base.Byte.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.INumeralValue{System.Byte}.ToString(System.String)
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Byte}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  name: ToString(string)
  nameWithType: INumeralValue<byte>.ToString(string)
  fullName: NumeralSystems.Net.Interface.INumeralValue<byte>.ToString(string)
  nameWithType.vb: INumeralValue(Of Byte).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Byte).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue{System.Byte}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
  isExternal: true
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  name: ToString(string)
  nameWithType: INumeralValue<TValue>.ToString(string)
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.ToString(string)
  nameWithType.vb: INumeralValue(Of TValue).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
