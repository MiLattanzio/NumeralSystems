### YamlMime:ManagedReference
items:
- uid: NumeralSystems.Net.Type.Base.Double
  commentId: T:NumeralSystems.Net.Type.Base.Double
  id: Double
  parent: NumeralSystems.Net.Type.Base
  children:
  - NumeralSystems.Net.Type.Base.Double.And(NumeralSystems.Net.Type.Base.Double)
  - NumeralSystems.Net.Type.Base.Double.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  - NumeralSystems.Net.Type.Base.Double.Binary
  - NumeralSystems.Net.Type.Base.Double.BitLength
  - NumeralSystems.Net.Type.Base.Double.Bytes
  - NumeralSystems.Net.Type.Base.Double.FromBinary(System.Boolean[])
  - NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase(System.UInt64[],System.UInt64[],System.Boolean,System.Int32)
  - NumeralSystems.Net.Type.Base.Double.Incomplete
  - NumeralSystems.Net.Type.Base.Double.Item(System.Int32)
  - NumeralSystems.Net.Type.Base.Double.Nand(NumeralSystems.Net.Type.Base.Double)
  - NumeralSystems.Net.Type.Base.Double.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  - NumeralSystems.Net.Type.Base.Double.Not
  - NumeralSystems.Net.Type.Base.Double.Or(NumeralSystems.Net.Type.Base.Double)
  - NumeralSystems.Net.Type.Base.Double.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  - NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  - NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  - NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  - NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  - NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase(System.Double,System.Int32)
  - NumeralSystems.Net.Type.Base.Double.ToString
  - NumeralSystems.Net.Type.Base.Double.ToString(System.String)
  - NumeralSystems.Net.Type.Base.Double.Value
  - NumeralSystems.Net.Type.Base.Double.Xor(NumeralSystems.Net.Type.Base.Double)
  - NumeralSystems.Net.Type.Base.Double.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  langs:
  - csharp
  - vb
  name: Double
  nameWithType: Double
  fullName: NumeralSystems.Net.Type.Base.Double
  type: Class
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Encode/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Double
    path: NumeralSystems.Net/Type/Encode/Double.cs
    startLine: 5
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Represents a double-precision floating-point number with various binary operations.
  example: []
  syntax:
    content: 'public sealed class Double : IRegularOperable<IncompleteDouble, Double, double, ulong>, IIncompletable<IncompleteDouble, Double, double, ulong>, INumeralValue<double>, IRegularReversible<IncompleteDouble, Double, double, ulong>'
    content.vb: Public NotInheritable Class [Double] Implements IRegularOperable(Of IncompleteDouble, Double, Double, ULong), IIncompletable(Of IncompleteDouble, Double, Double, ULong), INumeralValue(Of Double), IRegularReversible(Of IncompleteDouble, Double, Double, ULong)
  inheritance:
  - System.Object
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  - NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  - NumeralSystems.Net.Interface.INumeralValue{System.Double}
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NumeralSystems.Net.Type.Base.Double.FromBinary(System.Boolean[])
  commentId: M:NumeralSystems.Net.Type.Base.Double.FromBinary(System.Boolean[])
  id: FromBinary(System.Boolean[])
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: FromBinary(bool[])
  nameWithType: Double.FromBinary(bool[])
  fullName: NumeralSystems.Net.Type.Base.Double.FromBinary(bool[])
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: FromBinary
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 18
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Creates a Double instance from a binary array.
  example: []
  syntax:
    content: public static Double FromBinary(bool[] binary)
    parameters:
    - id: binary
      type: System.Boolean[]
      description: The binary array representing the double value.
    return:
      type: NumeralSystems.Net.Type.Base.Double
      description: A new Double instance.
    content.vb: Public Shared Function FromBinary(binary As Boolean()) As [Double]
  overload: NumeralSystems.Net.Type.Base.Double.FromBinary*
  nameWithType.vb: Double.FromBinary(Boolean())
  fullName.vb: NumeralSystems.Net.Type.Base.Double.FromBinary(Boolean())
  name.vb: FromBinary(Boolean())
- uid: NumeralSystems.Net.Type.Base.Double.Value
  commentId: P:NumeralSystems.Net.Type.Base.Double.Value
  id: Value
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Double.Value
  fullName: NumeralSystems.Net.Type.Base.Double.Value
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Value
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 26
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Gets or sets the double value.
  example: []
  syntax:
    content: public double Value { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Value As Double
  overload: NumeralSystems.Net.Type.Base.Double.Value*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Double}.Value
- uid: NumeralSystems.Net.Type.Base.Double.Bytes
  commentId: P:NumeralSystems.Net.Type.Base.Double.Bytes
  id: Bytes
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Bytes
  nameWithType: Double.Bytes
  fullName: NumeralSystems.Net.Type.Base.Double.Bytes
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Bytes
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 31
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Gets or sets the byte representation of the double value.
  example: []
  syntax:
    content: public byte[] Bytes { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Bytes As Byte()
  overload: NumeralSystems.Net.Type.Base.Double.Bytes*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Double}.Bytes
- uid: NumeralSystems.Net.Type.Base.Double.BitLength
  commentId: P:NumeralSystems.Net.Type.Base.Double.BitLength
  id: BitLength
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: BitLength
  nameWithType: Double.BitLength
  fullName: NumeralSystems.Net.Type.Base.Double.BitLength
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: BitLength
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 40
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Gets the bit length of the double value.
  example: []
  syntax:
    content: public int BitLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BitLength As Integer
  overload: NumeralSystems.Net.Type.Base.Double.BitLength*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Double}.BitLength
- uid: NumeralSystems.Net.Type.Base.Double.Binary
  commentId: P:NumeralSystems.Net.Type.Base.Double.Binary
  id: Binary
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Binary
  nameWithType: Double.Binary
  fullName: NumeralSystems.Net.Type.Base.Double.Binary
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Binary
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 45
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Gets or sets the binary representation of the double value.
  example: []
  syntax:
    content: public bool[] Binary { get; set; }
    parameters: []
    return:
      type: System.Boolean[]
    content.vb: Public Property Binary As Boolean()
  overload: NumeralSystems.Net.Type.Base.Double.Binary*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Double}.Binary
- uid: NumeralSystems.Net.Type.Base.Double.Item(System.Int32)
  commentId: P:NumeralSystems.Net.Type.Base.Double.Item(System.Int32)
  id: Item(System.Int32)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Double.this[int]
  fullName: NumeralSystems.Net.Type.Base.Double.this[int]
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: this[]
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 56
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Gets or sets the binary value at the specified index.
  example: []
  syntax:
    content: public bool this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the binary value.
    return:
      type: System.Boolean
      description: The binary value at the specified index.
    content.vb: Public Default Property this[](index As Integer) As Boolean
  overload: NumeralSystems.Net.Type.Base.Double.Item*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Double}.Item(System.Int32)
  nameWithType.vb: Double.this[](Integer)
  fullName.vb: NumeralSystems.Net.Type.Base.Double.this[](Integer)
  name.vb: this[](Integer)
- uid: NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  id: ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: ReverseAnd(Double, out IncompleteDouble)
  nameWithType: Double.ReverseAnd(Double, out IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Base.Double, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseAnd
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 72
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs a reverse AND operation with another Double and returns the result as an IncompleteDouble.
  example: []
  syntax:
    content: public bool ReverseAnd(Double right, out IncompleteDouble result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Base.Double
      description: The Double to perform the operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the operation.
    return:
      type: System.Boolean
      description: True if the operation was successful, otherwise false.
    content.vb: Public Function ReverseAnd(right As [Double], result As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Base.Double.ReverseAnd*
  implements:
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  nameWithType.vb: Double.ReverseAnd(Double, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Base.Double, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseAnd(Double, IncompleteDouble)
- uid: NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  id: ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: ReverseAnd(IncompleteDouble, out IncompleteDouble)
  nameWithType: Double.ReverseAnd(IncompleteDouble, out IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseAnd
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 92
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs a reverse AND operation with an IncompleteDouble and returns the result as an IncompleteDouble.
  example: []
  syntax:
    content: public bool ReverseAnd(IncompleteDouble right, out IncompleteDouble result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The IncompleteDouble to perform the operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the operation.
    return:
      type: System.Boolean
      description: True if the operation was successful, otherwise false.
    content.vb: Public Function ReverseAnd(right As IncompleteDouble, result As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Base.Double.ReverseAnd*
  implements:
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  nameWithType.vb: Double.ReverseAnd(IncompleteDouble, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Type.Base.Double.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseAnd(IncompleteDouble, IncompleteDouble)
- uid: NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  id: ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: ReverseOr(Double, out IncompleteDouble)
  nameWithType: Double.ReverseOr(Double, out IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Base.Double, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseOr
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 112
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs a reverse OR operation with another Double and returns the result as an IncompleteDouble.
  example: []
  syntax:
    content: public bool ReverseOr(Double right, out IncompleteDouble result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Base.Double
      description: The Double to perform the operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the operation.
    return:
      type: System.Boolean
      description: True if the operation was successful, otherwise false.
    content.vb: Public Function ReverseOr(right As [Double], result As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Base.Double.ReverseOr*
  implements:
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  nameWithType.vb: Double.ReverseOr(Double, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Base.Double, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseOr(Double, IncompleteDouble)
- uid: NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  id: ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: ReverseOr(IncompleteDouble, out IncompleteDouble)
  nameWithType: Double.ReverseOr(IncompleteDouble, out IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseOr
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 132
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs a reverse OR operation with an IncompleteDouble and returns the result as an IncompleteDouble.
  example: []
  syntax:
    content: public bool ReverseOr(IncompleteDouble right, out IncompleteDouble result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The IncompleteDouble to perform the operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the operation.
    return:
      type: System.Boolean
      description: True if the operation was successful, otherwise false.
    content.vb: Public Function ReverseOr(right As IncompleteDouble, result As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Base.Double.ReverseOr*
  implements:
  - NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  nameWithType.vb: Double.ReverseOr(IncompleteDouble, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Type.Base.Double.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseOr(IncompleteDouble, IncompleteDouble)
- uid: NumeralSystems.Net.Type.Base.Double.Not
  commentId: M:NumeralSystems.Net.Type.Base.Double.Not
  id: Not
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Not()
  nameWithType: Double.Not()
  fullName: NumeralSystems.Net.Type.Base.Double.Not()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Not
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 150
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs a NOT operation on the Double and returns the result.
  example: []
  syntax:
    content: public Double Not()
    return:
      type: NumeralSystems.Net.Type.Base.Double
      description: The result of the NOT operation.
    content.vb: Public Function [Not]() As [Double]
  overload: NumeralSystems.Net.Type.Base.Double.Not*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
- uid: NumeralSystems.Net.Type.Base.Double.Xor(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Type.Base.Double.Xor(NumeralSystems.Net.Type.Base.Double)
  id: Xor(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Xor(Double)
  nameWithType: Double.Xor(Double)
  fullName: NumeralSystems.Net.Type.Base.Double.Xor(NumeralSystems.Net.Type.Base.Double)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 160
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs an XOR operation with another Double and returns the result.
  example: []
  syntax:
    content: public Double Xor(Double value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Double
      description: The Double to perform the operation with.
    return:
      type: NumeralSystems.Net.Type.Base.Double
      description: The result of the XOR operation.
    content.vb: Public Function [Xor](value As [Double]) As [Double]
  overload: NumeralSystems.Net.Type.Base.Double.Xor*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
- uid: NumeralSystems.Net.Type.Base.Double.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Type.Base.Double.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  id: Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Xor(IncompleteDouble)
  nameWithType: Double.Xor(IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Base.Double.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 170
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs an XOR operation with an IncompleteDouble and returns the result.
  example: []
  syntax:
    content: public IncompleteDouble Xor(IncompleteDouble value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The IncompleteDouble to perform the operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the XOR operation.
    content.vb: Public Function [Xor](value As IncompleteDouble) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Base.Double.Xor*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
- uid: NumeralSystems.Net.Type.Base.Double.And(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Type.Base.Double.And(NumeralSystems.Net.Type.Base.Double)
  id: And(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: And(Double)
  nameWithType: Double.And(Double)
  fullName: NumeralSystems.Net.Type.Base.Double.And(NumeralSystems.Net.Type.Base.Double)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 180
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs an AND operation with another Double and returns the result.
  example: []
  syntax:
    content: public Double And(Double value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Double
      description: The Double to perform the operation with.
    return:
      type: NumeralSystems.Net.Type.Base.Double
      description: The result of the AND operation.
    content.vb: Public Function [And](value As [Double]) As [Double]
  overload: NumeralSystems.Net.Type.Base.Double.And*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
- uid: NumeralSystems.Net.Type.Base.Double.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Type.Base.Double.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  id: And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: And(IncompleteDouble)
  nameWithType: Double.And(IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Base.Double.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 190
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs an AND operation with an IncompleteDouble and returns the result.
  example: []
  syntax:
    content: public IncompleteDouble And(IncompleteDouble value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The IncompleteDouble to perform the operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the AND operation.
    content.vb: Public Function [And](value As IncompleteDouble) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Base.Double.And*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
- uid: NumeralSystems.Net.Type.Base.Double.Or(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Type.Base.Double.Or(NumeralSystems.Net.Type.Base.Double)
  id: Or(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Or(Double)
  nameWithType: Double.Or(Double)
  fullName: NumeralSystems.Net.Type.Base.Double.Or(NumeralSystems.Net.Type.Base.Double)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 200
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs an OR operation with another Double and returns the result.
  example: []
  syntax:
    content: public Double Or(Double value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Double
      description: The Double to perform the operation with.
    return:
      type: NumeralSystems.Net.Type.Base.Double
      description: The result of the OR operation.
    content.vb: Public Function [Or](value As [Double]) As [Double]
  overload: NumeralSystems.Net.Type.Base.Double.Or*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
- uid: NumeralSystems.Net.Type.Base.Double.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Type.Base.Double.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  id: Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Or(IncompleteDouble)
  nameWithType: Double.Or(IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Base.Double.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 210
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs an OR operation with an IncompleteDouble and returns the result.
  example: []
  syntax:
    content: public IncompleteDouble Or(IncompleteDouble value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The IncompleteDouble to perform the operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the OR operation.
    content.vb: Public Function [Or](value As IncompleteDouble) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Base.Double.Or*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
- uid: NumeralSystems.Net.Type.Base.Double.Nand(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Type.Base.Double.Nand(NumeralSystems.Net.Type.Base.Double)
  id: Nand(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Nand(Double)
  nameWithType: Double.Nand(Double)
  fullName: NumeralSystems.Net.Type.Base.Double.Nand(NumeralSystems.Net.Type.Base.Double)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Nand
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 220
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs a NAND operation with another Double and returns the result.
  example: []
  syntax:
    content: public Double Nand(Double value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Double
      description: The Double to perform the operation with.
    return:
      type: NumeralSystems.Net.Type.Base.Double
      description: The result of the NAND operation.
    content.vb: Public Function Nand(value As [Double]) As [Double]
  overload: NumeralSystems.Net.Type.Base.Double.Nand*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Base.Double)
- uid: NumeralSystems.Net.Type.Base.Double.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Type.Base.Double.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  id: Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Nand(IncompleteDouble)
  nameWithType: Double.Nand(IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Base.Double.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Nand
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 230
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Performs a NAND operation with an IncompleteDouble and returns the result.
  example: []
  syntax:
    content: public IncompleteDouble Nand(IncompleteDouble value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The IncompleteDouble to perform the operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the NAND operation.
    content.vb: Public Function Nand(value As IncompleteDouble) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Base.Double.Nand*
  implements:
  - NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
- uid: NumeralSystems.Net.Type.Base.Double.Incomplete
  commentId: M:NumeralSystems.Net.Type.Base.Double.Incomplete
  id: Incomplete
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: Incomplete()
  nameWithType: Double.Incomplete()
  fullName: NumeralSystems.Net.Type.Base.Double.Incomplete()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Incomplete
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 239
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Converts the Double to an IncompleteDouble.
  example: []
  syntax:
    content: public IncompleteDouble Incomplete()
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The IncompleteDouble representation of the Double.
    content.vb: Public Function Incomplete() As IncompleteDouble
  overload: NumeralSystems.Net.Type.Base.Double.Incomplete*
  implements:
  - NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Incomplete
- uid: NumeralSystems.Net.Type.Base.Double.ToString
  commentId: M:NumeralSystems.Net.Type.Base.Double.ToString
  id: ToString
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Double.ToString()
  fullName: NumeralSystems.Net.Type.Base.Double.ToString()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToString
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 248
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Returns the string representation of the Double value.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation of the Double value.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NumeralSystems.Net.Type.Base.Double.ToString*
- uid: NumeralSystems.Net.Type.Base.Double.ToString(System.String)
  commentId: M:NumeralSystems.Net.Type.Base.Double.ToString(System.String)
  id: ToString(System.String)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Double.ToString(string)
  fullName: NumeralSystems.Net.Type.Base.Double.ToString(string)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Base/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToString
    path: NumeralSystems.Net/Type/Base/Double.cs
    startLine: 255
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Converts the Double to a string using the specified format.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: The format string.
    return:
      type: System.String
      description: The formatted string representation of the Double.
    content.vb: Public Function ToString(format As String) As String
  overload: NumeralSystems.Net.Type.Base.Double.ToString*
  implements:
  - NumeralSystems.Net.Interface.INumeralValue{System.Double}.ToString(System.String)
  nameWithType.vb: Double.ToString(String)
  fullName.vb: NumeralSystems.Net.Type.Base.Double.ToString(String)
  name.vb: ToString(String)
- uid: NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase(System.Double,System.Int32)
  commentId: M:NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase(System.Double,System.Int32)
  id: ToIndicesOfBase(System.Double,System.Int32)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: ToIndicesOfBase(double, int)
  nameWithType: Double.ToIndicesOfBase(double, int)
  fullName: NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase(double, int)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Encode/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToIndicesOfBase
    path: NumeralSystems.Net/Type/Encode/Double.cs
    startLine: 13
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Converts a double value to its indices representation in a specified base.
  example: []
  syntax:
    content: public static (ulong[] Integral, ulong[] Fractional, bool positive) ToIndicesOfBase(double val, int destinationBase)
    parameters:
    - id: val
      type: System.Double
      description: The double value to convert.
    - id: destinationBase
      type: System.Int32
      description: The base to convert to.
    return:
      type: System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}
      description: A tuple containing the integral part, fractional part, and a boolean indicating if the value is positive.
    content.vb: Public Shared Function ToIndicesOfBase(val As Double, destinationBase As Integer) As (Integral As ULong(), Fractional As ULong(), positive As Boolean)
  overload: NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase*
  nameWithType.vb: Double.ToIndicesOfBase(Double, Integer)
  fullName.vb: NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase(Double, Integer)
  name.vb: ToIndicesOfBase(Double, Integer)
- uid: NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase(System.UInt64[],System.UInt64[],System.Boolean,System.Int32)
  commentId: M:NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase(System.UInt64[],System.UInt64[],System.Boolean,System.Int32)
  id: FromIndicesOfBase(System.UInt64[],System.UInt64[],System.Boolean,System.Int32)
  parent: NumeralSystems.Net.Type.Base.Double
  langs:
  - csharp
  - vb
  name: FromIndicesOfBase(ulong[], ulong[], bool, int)
  nameWithType: Double.FromIndicesOfBase(ulong[], ulong[], bool, int)
  fullName: NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase(ulong[], ulong[], bool, int)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Encode/Double.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: FromIndicesOfBase
    path: NumeralSystems.Net/Type/Encode/Double.cs
    startLine: 31
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Base
  summary: Converts indices representation in a specified base to a double value.
  example: []
  syntax:
    content: public static double FromIndicesOfBase(ulong[] integral, ulong[] fractional, bool positive, int sourceBase)
    parameters:
    - id: integral
      type: System.UInt64[]
      description: The integral part indices.
    - id: fractional
      type: System.UInt64[]
      description: The fractional part indices.
    - id: positive
      type: System.Boolean
      description: Indicates if the value is positive.
    - id: sourceBase
      type: System.Int32
      description: The base of the indices.
    return:
      type: System.Double
      description: The double value.
    content.vb: Public Shared Function FromIndicesOfBase(integral As ULong(), fractional As ULong(), positive As Boolean, sourceBase As Integer) As Double
  overload: NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase*
  nameWithType.vb: Double.FromIndicesOfBase(ULong(), ULong(), Boolean, Integer)
  fullName.vb: NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase(ULong(), ULong(), Boolean, Integer)
  name.vb: FromIndicesOfBase(ULong(), ULong(), Boolean, Integer)
references:
- uid: NumeralSystems.Net.Type.Base
  commentId: N:NumeralSystems.Net.Type.Base
  href: NumeralSystems.html
  name: NumeralSystems.Net.Type.Base
  nameWithType: NumeralSystems.Net.Type.Base
  fullName: NumeralSystems.Net.Type.Base
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Base
    name: Base
    href: NumeralSystems.Net.Type.Base.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Base
    name: Base
    href: NumeralSystems.Net.Type.Base.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  commentId: T:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IRegularOperable`4
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  name: IRegularOperable<IncompleteDouble, Double, double, ulong>
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong)
  name.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4
    name: IRegularOperable
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4
    name: IRegularOperable
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  commentId: T:NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IIncompletable`4
  href: NumeralSystems.Net.Interface.IIncompletable-4.html
  name: IIncompletable<IncompleteDouble, Double, double, ulong>
  nameWithType: IIncompletable<IncompleteDouble, Double, double, ulong>
  fullName: NumeralSystems.Net.Interface.IIncompletable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>
  nameWithType.vb: IIncompletable(Of IncompleteDouble, Double, Double, ULong)
  fullName.vb: NumeralSystems.Net.Interface.IIncompletable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong)
  name.vb: IIncompletable(Of IncompleteDouble, Double, Double, ULong)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4
    name: IIncompletable
    href: NumeralSystems.Net.Interface.IIncompletable-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4
    name: IIncompletable
    href: NumeralSystems.Net.Interface.IIncompletable-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}
  commentId: T:NumeralSystems.Net.Interface.INumeralValue{System.Double}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.INumeralValue`1
  href: NumeralSystems.Net.Interface.INumeralValue-1.html
  name: INumeralValue<double>
  nameWithType: INumeralValue<double>
  fullName: NumeralSystems.Net.Interface.INumeralValue<double>
  nameWithType.vb: INumeralValue(Of Double)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Double)
  name.vb: INumeralValue(Of Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1
    name: INumeralValue
    href: NumeralSystems.Net.Interface.INumeralValue-1.html
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1
    name: INumeralValue
    href: NumeralSystems.Net.Interface.INumeralValue-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  commentId: T:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IRegularReversible`4
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  name: IRegularReversible<IncompleteDouble, Double, double, ulong>
  nameWithType: IRegularReversible<IncompleteDouble, Double, double, ulong>
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>
  nameWithType.vb: IRegularReversible(Of IncompleteDouble, Double, Double, ULong)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong)
  name.vb: IRegularReversible(Of IncompleteDouble, Double, Double, ULong)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4
    name: IRegularReversible
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4
    name: IRegularReversible
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NumeralSystems.Net.Interface.IRegularOperable`4
  commentId: T:NumeralSystems.Net.Interface.IRegularOperable`4
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  name: IRegularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer)
  name.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4
    name: IRegularOperable
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4
    name: IRegularOperable
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface
  commentId: N:NumeralSystems.Net.Interface
  href: NumeralSystems.html
  name: NumeralSystems.Net.Interface
  nameWithType: NumeralSystems.Net.Interface
  fullName: NumeralSystems.Net.Interface
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
- uid: NumeralSystems.Net.Interface.IIncompletable`4
  commentId: T:NumeralSystems.Net.Interface.IIncompletable`4
  href: NumeralSystems.Net.Interface.IIncompletable-4.html
  name: IIncompletable<TIncomplete, TValue, TType, TIndexer>
  nameWithType: IIncompletable<TIncomplete, TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIncompletable<TIncomplete, TValue, TType, TIndexer>
  nameWithType.vb: IIncompletable(Of TIncomplete, TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompletable(Of TIncomplete, TValue, TType, TIndexer)
  name.vb: IIncompletable(Of TIncomplete, TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4
    name: IIncompletable
    href: NumeralSystems.Net.Interface.IIncompletable-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4
    name: IIncompletable
    href: NumeralSystems.Net.Interface.IIncompletable-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue`1
  commentId: T:NumeralSystems.Net.Interface.INumeralValue`1
  href: NumeralSystems.Net.Interface.INumeralValue-1.html
  name: INumeralValue<TValue>
  nameWithType: INumeralValue<TValue>
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>
  nameWithType.vb: INumeralValue(Of TValue)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue)
  name.vb: INumeralValue(Of TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1
    name: INumeralValue
    href: NumeralSystems.Net.Interface.INumeralValue-1.html
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1
    name: INumeralValue
    href: NumeralSystems.Net.Interface.INumeralValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible`4
  commentId: T:NumeralSystems.Net.Interface.IRegularReversible`4
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  name: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer)
  name.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4
    name: IRegularReversible
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4
    name: IRegularReversible
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.FromBinary*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.FromBinary
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_FromBinary_System_Boolean___
  name: FromBinary
  nameWithType: Double.FromBinary
  fullName: NumeralSystems.Net.Type.Base.Double.FromBinary
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double
  commentId: T:NumeralSystems.Net.Type.Base.Double
  parent: NumeralSystems.Net.Type.Base
  href: NumeralSystems.Net.Type.Base.Double.html
  name: Double
  nameWithType: Double
  fullName: NumeralSystems.Net.Type.Base.Double
- uid: NumeralSystems.Net.Type.Base.Double.Value*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Value
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Value
  name: Value
  nameWithType: Double.Value
  fullName: NumeralSystems.Net.Type.Base.Double.Value
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.Value
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Double}.Value
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Double}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.Value
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Value
  name: Value
  nameWithType: INumeralValue<double>.Value
  fullName: NumeralSystems.Net.Interface.INumeralValue<double>.Value
  nameWithType.vb: INumeralValue(Of Double).Value
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Double).Value
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: NumeralSystems.Net.Interface.INumeralValue`1.Value
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.Value
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Value
  name: Value
  nameWithType: INumeralValue<TValue>.Value
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.Value
  nameWithType.vb: INumeralValue(Of TValue).Value
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).Value
- uid: NumeralSystems.Net.Type.Base.Double.Bytes*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Bytes
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Bytes
  name: Bytes
  nameWithType: Double.Bytes
  fullName: NumeralSystems.Net.Type.Base.Double.Bytes
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.Bytes
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Double}.Bytes
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Double}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.Bytes
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Bytes
  name: Bytes
  nameWithType: INumeralValue<double>.Bytes
  fullName: NumeralSystems.Net.Interface.INumeralValue<double>.Bytes
  nameWithType.vb: INumeralValue(Of Double).Bytes
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Double).Bytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue`1.Bytes
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.Bytes
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Bytes
  name: Bytes
  nameWithType: INumeralValue<TValue>.Bytes
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.Bytes
  nameWithType.vb: INumeralValue(Of TValue).Bytes
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).Bytes
- uid: NumeralSystems.Net.Type.Base.Double.BitLength*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.BitLength
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_BitLength
  name: BitLength
  nameWithType: Double.BitLength
  fullName: NumeralSystems.Net.Type.Base.Double.BitLength
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.BitLength
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Double}.BitLength
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Double}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.BitLength
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_BitLength
  name: BitLength
  nameWithType: INumeralValue<double>.BitLength
  fullName: NumeralSystems.Net.Interface.INumeralValue<double>.BitLength
  nameWithType.vb: INumeralValue(Of Double).BitLength
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Double).BitLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NumeralSystems.Net.Interface.INumeralValue`1.BitLength
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.BitLength
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_BitLength
  name: BitLength
  nameWithType: INumeralValue<TValue>.BitLength
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.BitLength
  nameWithType.vb: INumeralValue(Of TValue).BitLength
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).BitLength
- uid: NumeralSystems.Net.Type.Base.Double.Binary*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Binary
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Binary
  name: Binary
  nameWithType: Double.Binary
  fullName: NumeralSystems.Net.Type.Base.Double.Binary
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.Binary
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Double}.Binary
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Double}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.Binary
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Binary
  name: Binary
  nameWithType: INumeralValue<double>.Binary
  fullName: NumeralSystems.Net.Interface.INumeralValue<double>.Binary
  nameWithType.vb: INumeralValue(Of Double).Binary
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Double).Binary
- uid: NumeralSystems.Net.Interface.INumeralValue`1.Binary
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.Binary
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Binary
  name: Binary
  nameWithType: INumeralValue<TValue>.Binary
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.Binary
  nameWithType.vb: INumeralValue(Of TValue).Binary
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).Binary
- uid: NumeralSystems.Net.Type.Base.Double.Item*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Item
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Item_System_Int32_
  name: this
  nameWithType: Double.this
  fullName: NumeralSystems.Net.Type.Base.Double.this
  nameWithType.vb: Double.this[]
  fullName.vb: NumeralSystems.Net.Type.Base.Double.this[]
  name.vb: this[]
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.Item(System.Int32)
  commentId: P:NumeralSystems.Net.Interface.INumeralValue{System.Double}.Item(System.Int32)
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Double}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: INumeralValue<double>.this[int]
  fullName: NumeralSystems.Net.Interface.INumeralValue<double>.this[int]
  nameWithType.vb: INumeralValue(Of Double).this[](Integer)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Double).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.Item(System.Int32)
    name: this[]
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Item_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NumeralSystems.Net.Interface.INumeralValue`1.Item(System.Int32)
  commentId: P:NumeralSystems.Net.Interface.INumeralValue`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: INumeralValue<TValue>.this[int]
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.this[int]
  nameWithType.vb: INumeralValue(Of TValue).this[](Integer)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1.Item(System.Int32)
    name: this[]
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_Item_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.ReverseAnd*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.ReverseAnd
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_ReverseAnd_NumeralSystems_Net_Type_Base_Double_NumeralSystems_Net_Type_Incomplete_IncompleteDouble__
  name: ReverseAnd
  nameWithType: Double.ReverseAnd
  fullName: NumeralSystems.Net.Type.Base.Double.ReverseAnd
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(Double, out IncompleteDouble)
  nameWithType: IRegularReversible<IncompleteDouble, Double, double, ulong>.ReverseAnd(Double, out IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.ReverseAnd(NumeralSystems.Net.Type.Base.Double, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRegularReversible(Of IncompleteDouble, Double, Double, ULong).ReverseAnd(Double, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).ReverseAnd(NumeralSystems.Net.Type.Base.Double, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseAnd(Double, IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  commentId: T:NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  parent: NumeralSystems.Net.Type.Incomplete
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  name: IncompleteDouble
  nameWithType: IncompleteDouble
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
- uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(TNumaralValue, out TIncomplete)
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseAnd(TNumaralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseAnd(TNumaralValue, out TIncomplete)
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseAnd(TNumaralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseAnd(TNumaralValue, TIncomplete)
  name.vb: ReverseAnd(TNumaralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete
  commentId: N:NumeralSystems.Net.Type.Incomplete
  href: NumeralSystems.html
  name: NumeralSystems.Net.Type.Incomplete
  nameWithType: NumeralSystems.Net.Type.Incomplete
  fullName: NumeralSystems.Net.Type.Incomplete
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Type.Incomplete.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Type.Incomplete.html
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(IncompleteDouble, out IncompleteDouble)
  nameWithType: IRegularReversible<IncompleteDouble, Double, double, ulong>.ReverseAnd(IncompleteDouble, out IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRegularReversible(Of IncompleteDouble, Double, Double, ULong).ReverseAnd(IncompleteDouble, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseAnd(IncompleteDouble, IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  name.vb: ReverseAnd(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.ReverseOr*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.ReverseOr
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_ReverseOr_NumeralSystems_Net_Type_Base_Double_NumeralSystems_Net_Type_Incomplete_IncompleteDouble__
  name: ReverseOr
  nameWithType: Double.ReverseOr
  fullName: NumeralSystems.Net.Type.Base.Double.ReverseOr
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  name: ReverseOr(Double, out IncompleteDouble)
  nameWithType: IRegularReversible<IncompleteDouble, Double, double, ulong>.ReverseOr(Double, out IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.ReverseOr(NumeralSystems.Net.Type.Base.Double, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRegularReversible(Of IncompleteDouble, Double, Double, ULong).ReverseOr(Double, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).ReverseOr(NumeralSystems.Net.Type.Base.Double, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseOr(Double, IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  name: ReverseOr(TNumaralValue, out TIncomplete)
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseOr(TNumaralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseOr(TNumaralValue, out TIncomplete)
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseOr(TNumaralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseOr(TNumaralValue, TIncomplete)
  name.vb: ReverseOr(TNumaralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumaralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  name: ReverseOr(IncompleteDouble, out IncompleteDouble)
  nameWithType: IRegularReversible<IncompleteDouble, Double, double, ulong>.ReverseOr(IncompleteDouble, out IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRegularReversible(Of IncompleteDouble, Double, Double, ULong).ReverseOr(IncompleteDouble, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseOr(IncompleteDouble, IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  name: ReverseOr(TIncomplete, out TIncomplete)
  nameWithType: IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularReversible<TIncomplete, TNumaralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  nameWithType.vb: IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularReversible(Of TIncomplete, TNumaralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  name.vb: ReverseOr(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRegularReversible-4.html#NumeralSystems_Net_Interface_IRegularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.Not*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Not
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Not
  name: Not
  nameWithType: Double.Not
  fullName: NumeralSystems.Net.Type.Base.Double.Not
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Not
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  name: Not()
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.Not()
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Not()
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).Not()
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Not()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
    name: Not
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
    name: Not
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Not
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Not
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  name: Not()
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Not
    name: Not
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Not
    name: Not
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Not
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.Xor*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Xor
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Xor_NumeralSystems_Net_Type_Base_Double_
  name: Xor
  nameWithType: Double.Xor
  fullName: NumeralSystems.Net.Type.Base.Double.Xor
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  name: Xor(Double)
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.Xor(Double)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Xor(NumeralSystems.Net.Type.Base.Double)
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).Xor(Double)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Xor(NumeralSystems.Net.Type.Base.Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  name: Xor(TValue)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`1)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  name: Xor(IncompleteDouble)
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.Xor(IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).Xor(IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  name: Xor(TIncomplete)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Xor(`0)
    name: Xor
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Xor__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.And*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.And
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_And_NumeralSystems_Net_Type_Base_Double_
  name: And
  nameWithType: Double.And
  fullName: NumeralSystems.Net.Type.Base.Double.And
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  name: And(Double)
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.And(Double)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.And(NumeralSystems.Net.Type.Base.Double)
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).And(Double)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).And(NumeralSystems.Net.Type.Base.Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  name: And(TValue)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`1)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  name: And(IncompleteDouble)
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.And(IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).And(IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  name: And(TIncomplete)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.And(`0)
    name: And
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_And__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.Or*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Or
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Or_NumeralSystems_Net_Type_Base_Double_
  name: Or
  nameWithType: Double.Or
  fullName: NumeralSystems.Net.Type.Base.Double.Or
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  name: Or(Double)
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.Or(Double)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Or(NumeralSystems.Net.Type.Base.Double)
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).Or(Double)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Or(NumeralSystems.Net.Type.Base.Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  name: Or(TValue)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`1)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  name: Or(IncompleteDouble)
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.Or(IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).Or(IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  name: Or(TIncomplete)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Or(`0)
    name: Or
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Or__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.Nand*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Nand
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Nand_NumeralSystems_Net_Type_Base_Double_
  name: Nand
  nameWithType: Double.Nand
  fullName: NumeralSystems.Net.Type.Base.Double.Nand
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  name: Nand(Double)
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.Nand(Double)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Nand(NumeralSystems.Net.Type.Base.Double)
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).Nand(Double)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Nand(NumeralSystems.Net.Type.Base.Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Base.Double)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Base.Double)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  name: Nand(TValue)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Nand(TValue)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Nand(TValue)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Nand(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Nand(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`1)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  name: Nand(IncompleteDouble)
  nameWithType: IRegularOperable<IncompleteDouble, Double, double, ulong>.Nand(IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRegularOperable(Of IncompleteDouble, Double, Double, ULong).Nand(IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Nand(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
  commentId: M:NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
  href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  name: Nand(TIncomplete)
  nameWithType: IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Nand(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRegularOperable<TIncomplete, TValue, TType, TIndexer>.Nand(TIncomplete)
  nameWithType.vb: IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Nand(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRegularOperable(Of TIncomplete, TValue, TType, TIndexer).Nand(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRegularOperable`4.Nand(`0)
    name: Nand
    href: NumeralSystems.Net.Interface.IRegularOperable-4.html#NumeralSystems_Net_Interface_IRegularOperable_4_Nand__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.Incomplete*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.Incomplete
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_Incomplete
  name: Incomplete
  nameWithType: Double.Incomplete
  fullName: NumeralSystems.Net.Type.Base.Double.Incomplete
- uid: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Incomplete
  commentId: M:NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Incomplete
  parent: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
  href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  name: Incomplete()
  nameWithType: IIncompletable<IncompleteDouble, Double, double, ulong>.Incomplete()
  fullName: NumeralSystems.Net.Interface.IIncompletable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Incomplete()
  nameWithType.vb: IIncompletable(Of IncompleteDouble, Double, Double, ULong).Incomplete()
  fullName.vb: NumeralSystems.Net.Interface.IIncompletable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Incomplete()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompletable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
  commentId: M:NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
  href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  name: Incomplete()
  nameWithType: IIncompletable<TIncomplete, TValue, TType, TIndexer>.Incomplete()
  fullName: NumeralSystems.Net.Interface.IIncompletable<TIncomplete, TValue, TType, TIndexer>.Incomplete()
  nameWithType.vb: IIncompletable(Of TIncomplete, TValue, TType, TIndexer).Incomplete()
  fullName.vb: NumeralSystems.Net.Interface.IIncompletable(Of TIncomplete, TValue, TType, TIndexer).Incomplete()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompletable`4.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Interface.IIncompletable-4.html#NumeralSystems_Net_Interface_IIncompletable_4_Incomplete
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.ToString*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.ToString
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_ToString
  name: ToString
  nameWithType: Double.ToString
  fullName: NumeralSystems.Net.Type.Base.Double.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.INumeralValue{System.Double}.ToString(System.String)
  parent: NumeralSystems.Net.Interface.INumeralValue{System.Double}
  definition: NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  name: ToString(string)
  nameWithType: INumeralValue<double>.ToString(string)
  fullName: NumeralSystems.Net.Interface.INumeralValue<double>.ToString(string)
  nameWithType.vb: INumeralValue(Of Double).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of Double).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue{System.Double}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
  isExternal: true
  href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  name: ToString(string)
  nameWithType: INumeralValue<TValue>.ToString(string)
  fullName: NumeralSystems.Net.Interface.INumeralValue<TValue>.ToString(string)
  nameWithType.vb: INumeralValue(Of TValue).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.INumeralValue(Of TValue).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.INumeralValue`1.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.INumeralValue-1.html#NumeralSystems_Net_Interface_INumeralValue_1_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_ToIndicesOfBase_System_Double_System_Int32_
  name: ToIndicesOfBase
  nameWithType: Double.ToIndicesOfBase
  fullName: NumeralSystems.Net.Type.Base.Double.ToIndicesOfBase
- uid: System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}
  commentId: T:System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: (ulong[] Integral, ulong[] Fractional, bool positive)
  nameWithType: (ulong[] Integral, ulong[] Fractional, bool positive)
  fullName: (ulong[] Integral, ulong[] Fractional, bool positive)
  nameWithType.vb: (Integral As ULong(), Fractional As ULong(), positive As Boolean)
  fullName.vb: (Integral As ULong(), Fractional As ULong(), positive As Boolean)
  name.vb: (Integral As ULong(), Fractional As ULong(), positive As Boolean)
  spec.csharp:
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '['
  - name: ']'
  - name: " "
  - uid: System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}.Integral
    name: Integral
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.uint64[],system.uint64[],system.boolean-.integral
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '['
  - name: ']'
  - name: " "
  - uid: System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}.Fractional
    name: Fractional
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.uint64[],system.uint64[],system.boolean-.fractional
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}.positive
    name: positive
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.uint64[],system.uint64[],system.boolean-.positive
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}.Integral
    name: Integral
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.uint64[],system.uint64[],system.boolean-.integral
  - name: " "
  - name: As
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}.Fractional
    name: Fractional
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.uint64[],system.uint64[],system.boolean-.fractional
  - name: " "
  - name: As
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.UInt64[],System.UInt64[],System.Boolean}.positive
    name: positive
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.uint64[],system.uint64[],system.boolean-.positive
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase*
  commentId: Overload:NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase
  href: NumeralSystems.Net.Type.Base.Double.html#NumeralSystems_Net_Type_Base_Double_FromIndicesOfBase_System_UInt64___System_UInt64___System_Boolean_System_Int32_
  name: FromIndicesOfBase
  nameWithType: Double.FromIndicesOfBase
  fullName: NumeralSystems.Net.Type.Base.Double.FromIndicesOfBase
- uid: System.UInt64[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong[]
  nameWithType: ulong[]
  fullName: ulong[]
  nameWithType.vb: ULong()
  fullName.vb: ULong()
  name.vb: ULong()
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: (
  - name: )
