### YamlMime:ManagedReference
items:
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  commentId: T:NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  id: IncompleteDouble
  parent: NumeralSystems.Net.Type.Incomplete
  children:
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And(NumeralSystems.Net.Type.Base.Double)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Binary
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ByteArray
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains(NumeralSystems.Net.Type.Base.Double)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Enumerable
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.IsComplete
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Item(System.UInt64)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Not
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or(NumeralSystems.Net.Type.Base.Double)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Permutations
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToByteArray
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString(System.String)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor(NumeralSystems.Net.Type.Base.Double)
  - NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  langs:
  - csharp
  - vb
  name: IncompleteDouble
  nameWithType: IncompleteDouble
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  type: Class
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: IncompleteDouble
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 10
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  syntax:
    content: 'public class IncompleteDouble : IIRregularOperable<IncompleteDouble, Double, double, ulong>, IIncompleteValue<Double, double, ulong>, IRregularReversible<IncompleteDouble, Double, double, ulong>'
    content.vb: Public Class IncompleteDouble Implements IIRregularOperable(Of IncompleteDouble, Double, Double, ULong), IIncompleteValue(Of Double, Double, ULong), IRregularReversible(Of IncompleteDouble, Double, Double, ULong)
  inheritance:
  - System.Object
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Binary
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Binary
  id: Binary
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Binary
  nameWithType: IncompleteDouble.Binary
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Binary
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Binary
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 17
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Gets or sets the binary representation of the double.
  example: []
  syntax:
    content: public bool?[] Binary { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}[]
    content.vb: Public Property Binary As Boolean?()
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Binary*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Binary
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.IsComplete
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.IsComplete
  id: IsComplete
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: IsComplete
  nameWithType: IncompleteDouble.IsComplete
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.IsComplete
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: IsComplete
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 44
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Gets a value indicating whether the binary representation is complete.
  example: []
  syntax:
    content: public bool IsComplete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsComplete As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.IsComplete*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.IsComplete
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Permutations
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Permutations
  id: Permutations
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Permutations
  nameWithType: IncompleteDouble.Permutations
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Permutations
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Permutations
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 49
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Gets the number of permutations of the binary representation.
  example: []
  syntax:
    content: public ulong Permutations { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Permutations As ULong
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Permutations*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Permutations
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Item(System.UInt64)
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Item(System.UInt64)
  id: Item(System.UInt64)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: this[ulong]
  nameWithType: IncompleteDouble.this[ulong]
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.this[ulong]
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: this[]
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 56
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Gets the double representation for the specified value.
  example: []
  syntax:
    content: public Double this[ulong value] { get; }
    parameters:
    - id: value
      type: System.UInt64
      description: The value to get the double representation for.
    return:
      type: NumeralSystems.Net.Type.Base.Double
      description: The double representation.
    content.vb: Public ReadOnly Default Property this[](value As ULong) As [Double]
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Item*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Item(System.UInt64)
  nameWithType.vb: IncompleteDouble.this[](ULong)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.this[](ULong)
  name.vb: this[](ULong)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Enumerable
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Enumerable
  id: Enumerable
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Enumerable
  nameWithType: IncompleteDouble.Enumerable
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Enumerable
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Enumerable
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 87
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Gets the enumerable of double representations.
  example: []
  syntax:
    content: public IEnumerable<Double> Enumerable { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NumeralSystems.Net.Type.Base.Double}
    content.vb: Public ReadOnly Property Enumerable As IEnumerable(Of [Double])
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Enumerable*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Enumerable
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ByteArray
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ByteArray
  id: ByteArray
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: ByteArray
  nameWithType: IncompleteDouble.ByteArray
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ByteArray
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ByteArray
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 92
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Gets the array of incomplete byte representations.
  example: []
  syntax:
    content: public IncompleteByte[] ByteArray { get; }
    parameters: []
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte[]
    content.vb: Public ReadOnly Property ByteArray As IncompleteByte()
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ByteArray*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ByteArray
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToByteArray
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToByteArray
  id: ToByteArray
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: ToByteArray()
  nameWithType: IncompleteDouble.ToByteArray()
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToByteArray()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToByteArray
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 98
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Converts the binary representation to an array of incomplete byte representations.
  example: []
  syntax:
    content: public IncompleteByte[] ToByteArray()
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte[]
      description: The array of incomplete byte representations.
    content.vb: Public Function ToByteArray() As IncompleteByte()
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToByteArray*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToByteArray
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString(System.String)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString(System.String)
  id: ToString(System.String)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: IncompleteDouble.ToString(string)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString(string)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToString
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 105
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Converts the binary representation to a string.
  example: []
  syntax:
    content: public string ToString(string missingSeparator = "*")
    parameters:
    - id: missingSeparator
      type: System.String
      description: The separator for missing bits.
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Function ToString(missingSeparator As String = "*") As String
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToString(System.String)
  nameWithType.vb: IncompleteDouble.ToString(String)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString(String)
  name.vb: ToString(String)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or(NumeralSystems.Net.Type.Base.Double)
  id: Or(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Or(Double)
  nameWithType: IncompleteDouble.Or(Double)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or(NumeralSystems.Net.Type.Base.Double)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 112
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise OR operation with the specified double.
  example: []
  syntax:
    content: public IncompleteDouble Or(Double other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Base.Double
      description: The double to perform the OR operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the OR operation.
    content.vb: Public Function [Or](other As [Double]) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains(NumeralSystems.Net.Type.Base.Double)
  id: Contains(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Contains(Double)
  nameWithType: IncompleteDouble.Contains(Double)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains(NumeralSystems.Net.Type.Base.Double)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Contains
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 122
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Determines whether the binary representation contains the specified double.
  example: []
  syntax:
    content: public bool Contains(Double value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.Double
      description: The double to check for.
    return:
      type: System.Boolean
      description: <code>true</code> if the binary representation contains the double; otherwise, <code>false</code>.
    content.vb: Public Function Contains(value As [Double]) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Base.Double)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  id: Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Contains(IncompleteDouble)
  nameWithType: IncompleteDouble.Contains(IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Contains
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 134
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Determines whether the binary representation contains the specified incomplete double.
  example: []
  syntax:
    content: public bool Contains(IncompleteDouble value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The incomplete double to check for.
    return:
      type: System.Boolean
      description: <code>true</code> if the binary representation contains the incomplete double; otherwise, <code>false</code>.
    content.vb: Public Function Contains(value As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Not
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Not
  id: Not
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Not()
  nameWithType: IncompleteDouble.Not()
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Not()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Not
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 153
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise NOT operation on the binary representation.
  example: []
  syntax:
    content: public IncompleteDouble Not()
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the NOT operation.
    content.vb: Public Function [Not]() As IncompleteDouble
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Not*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  id: Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Xor(IncompleteDouble)
  nameWithType: IncompleteDouble.Xor(IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 163
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise XOR operation with the specified incomplete double.
  example: []
  syntax:
    content: public IncompleteDouble Xor(IncompleteDouble other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The incomplete double to perform the XOR operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the XOR operation.
    content.vb: Public Function [Xor](other As IncompleteDouble) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor(NumeralSystems.Net.Type.Base.Double)
  id: Xor(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Xor(Double)
  nameWithType: IncompleteDouble.Xor(Double)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor(NumeralSystems.Net.Type.Base.Double)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 173
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise XOR operation with the specified double.
  example: []
  syntax:
    content: public IncompleteDouble Xor(Double other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Base.Double
      description: The double to perform the XOR operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the XOR operation.
    content.vb: Public Function [Xor](other As [Double]) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  id: And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: And(IncompleteDouble)
  nameWithType: IncompleteDouble.And(IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 183
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise AND operation with the specified incomplete double.
  example: []
  syntax:
    content: public IncompleteDouble And(IncompleteDouble other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The incomplete double to perform the AND operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the AND operation.
    content.vb: Public Function [And](other As IncompleteDouble) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And(NumeralSystems.Net.Type.Base.Double)
  id: And(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: And(Double)
  nameWithType: IncompleteDouble.And(Double)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And(NumeralSystems.Net.Type.Base.Double)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 192
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise AND operation with the specified double.
  example: []
  syntax:
    content: public IncompleteDouble And(Double other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Base.Double
      description: The double to perform the AND operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the AND operation.
    content.vb: Public Function [And](other As [Double]) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  id: Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: Or(IncompleteDouble)
  nameWithType: IncompleteDouble.Or(IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 201
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise OR operation with the specified incomplete double.
  example: []
  syntax:
    content: public IncompleteDouble Or(IncompleteDouble other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The incomplete double to perform the OR operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the OR operation.
    content.vb: Public Function [Or](other As IncompleteDouble) As IncompleteDouble
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  id: ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: ReverseAnd(Double, out IncompleteDouble)
  nameWithType: IncompleteDouble.ReverseAnd(Double, out IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Base.Double, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseAnd
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 212
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a reverse bitwise AND operation with the specified double.
  example: []
  syntax:
    content: public bool ReverseAnd(Double right, out IncompleteDouble result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Base.Double
      description: The double to perform the reverse AND operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the reverse AND operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the reverse AND operation was successful; otherwise, <code>false</code>.
    content.vb: Public Function ReverseAnd(right As [Double], result As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd*
  implements:
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  nameWithType.vb: IncompleteDouble.ReverseAnd(Double, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Base.Double, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseAnd(Double, IncompleteDouble)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  id: ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: ReverseAnd(IncompleteDouble, out IncompleteDouble)
  nameWithType: IncompleteDouble.ReverseAnd(IncompleteDouble, out IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseAnd
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 232
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a reverse bitwise AND operation with the specified incomplete double.
  example: []
  syntax:
    content: public bool ReverseAnd(IncompleteDouble right, out IncompleteDouble result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The incomplete double to perform the reverse AND operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the reverse AND operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the reverse AND operation was successful; otherwise, <code>false</code>.
    content.vb: Public Function ReverseAnd(right As IncompleteDouble, result As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd*
  implements:
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  nameWithType.vb: IncompleteDouble.ReverseAnd(IncompleteDouble, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseAnd(IncompleteDouble, IncompleteDouble)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  id: ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: ReverseOr(Double, out IncompleteDouble)
  nameWithType: IncompleteDouble.ReverseOr(Double, out IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Base.Double, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseOr
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 252
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a reverse bitwise OR operation with the specified double.
  example: []
  syntax:
    content: public bool ReverseOr(Double right, out IncompleteDouble result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Base.Double
      description: The double to perform the reverse OR operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the reverse OR operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the reverse OR operation was successful; otherwise, <code>false</code>.
    content.vb: Public Function ReverseOr(right As [Double], result As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr*
  implements:
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  nameWithType.vb: IncompleteDouble.ReverseOr(Double, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Base.Double, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseOr(Double, IncompleteDouble)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  id: ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  langs:
  - csharp
  - vb
  name: ReverseOr(IncompleteDouble, out IncompleteDouble)
  nameWithType: IncompleteDouble.ReverseOr(IncompleteDouble, out IncompleteDouble)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseOr
    path: NumeralSystems.Net/Type/Incomplete/IncompleteDouble.cs
    startLine: 272
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a reverse bitwise OR operation with the specified incomplete double.
  example: []
  syntax:
    content: public bool ReverseOr(IncompleteDouble right, out IncompleteDouble result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The incomplete double to perform the reverse OR operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
      description: The result of the reverse OR operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the reverse OR operation was successful; otherwise, <code>false</code>.
    content.vb: Public Function ReverseOr(right As IncompleteDouble, result As IncompleteDouble) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr*
  implements:
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  nameWithType.vb: IncompleteDouble.ReverseOr(IncompleteDouble, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseOr(IncompleteDouble, IncompleteDouble)
references:
- uid: NumeralSystems.Net.Type.Incomplete
  commentId: N:NumeralSystems.Net.Type.Incomplete
  href: NumeralSystems.html
  name: NumeralSystems.Net.Type.Incomplete
  nameWithType: NumeralSystems.Net.Type.Incomplete
  fullName: NumeralSystems.Net.Type.Incomplete
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Type.Incomplete.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Type.Incomplete.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  commentId: T:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  name: IIRregularOperable<IncompleteDouble, Double, double, ulong>
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong)
  name.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4
    name: IIRregularOperable
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4
    name: IIRregularOperable
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  commentId: T:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  name: IIncompleteValue<Double, double, ulong>
  nameWithType: IIncompleteValue<Double, double, ulong>
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong)
  name.vb: IIncompleteValue(Of Double, Double, ULong)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: <
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  commentId: T:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IRregularReversible`4
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  name: IRregularReversible<IncompleteDouble, Double, double, ulong>
  nameWithType: IRregularReversible<IncompleteDouble, Double, double, ulong>
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>
  nameWithType.vb: IRregularReversible(Of IncompleteDouble, Double, Double, ULong)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong)
  name.vb: IRregularReversible(Of IncompleteDouble, Double, Double, ULong)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4
  commentId: T:NumeralSystems.Net.Interface.IIRregularOperable`4
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  name: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
  name.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4
    name: IIRregularOperable
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4
    name: IIRregularOperable
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface
  commentId: N:NumeralSystems.Net.Interface
  href: NumeralSystems.html
  name: NumeralSystems.Net.Interface
  nameWithType: NumeralSystems.Net.Interface
  fullName: NumeralSystems.Net.Interface
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3
  commentId: T:NumeralSystems.Net.Interface.IIncompleteValue`3
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  name: IIncompleteValue<TValue, TType, TIndexer>
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer)
  name.vb: IIncompleteValue(Of TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4
  commentId: T:NumeralSystems.Net.Interface.IRregularReversible`4
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  name: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  name.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Binary*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Binary
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_Binary
  name: Binary
  nameWithType: IncompleteDouble.Binary
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Binary
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Binary
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Binary
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Binary
  name: Binary
  nameWithType: IIncompleteValue<Double, double, ulong>.Binary
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>.Binary
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong).Binary
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong).Binary
- uid: System.Nullable{System.Boolean}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?[]
  nameWithType: bool?[]
  fullName: bool?[]
  nameWithType.vb: Boolean?()
  fullName.vb: Boolean?()
  name.vb: Boolean?()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Binary
  name: Binary
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Binary
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Binary
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Binary
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Binary
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.IsComplete*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.IsComplete
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_IsComplete
  name: IsComplete
  nameWithType: IncompleteDouble.IsComplete
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.IsComplete
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.IsComplete
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.IsComplete
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_IsComplete
  name: IsComplete
  nameWithType: IIncompleteValue<Double, double, ulong>.IsComplete
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>.IsComplete
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong).IsComplete
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong).IsComplete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_IsComplete
  name: IsComplete
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.IsComplete
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.IsComplete
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).IsComplete
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).IsComplete
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Permutations*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Permutations
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_Permutations
  name: Permutations
  nameWithType: IncompleteDouble.Permutations
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Permutations
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Permutations
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Permutations
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Permutations
  name: Permutations
  nameWithType: IIncompleteValue<Double, double, ulong>.Permutations
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>.Permutations
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong).Permutations
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong).Permutations
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Permutations
  name: Permutations
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Permutations
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Permutations
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Permutations
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Permutations
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Item*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Item
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_Item_System_UInt64_
  name: this
  nameWithType: IncompleteDouble.this
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.this
  nameWithType.vb: IncompleteDouble.this[]
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.this[]
  name.vb: this[]
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Item(System.UInt64)
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Item(System.UInt64)
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: this[ulong]
  nameWithType: IIncompleteValue<Double, double, ulong>.this[ulong]
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>.this[ulong]
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong).this[](ULong)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong).this[](ULong)
  name.vb: this[](ULong)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Item(System.UInt64)
    name: this[]
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: NumeralSystems.Net.Type.Base.Double
  commentId: T:NumeralSystems.Net.Type.Base.Double
  parent: NumeralSystems.Net.Type.Base
  href: NumeralSystems.Net.Type.Base.Double.html
  name: Double
  nameWithType: Double
  fullName: NumeralSystems.Net.Type.Base.Double
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  name: this[TIndexer]
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.this[TIndexer]
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.this[TIndexer]
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).this[](TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).this[](TIndexer)
  name.vb: this[](TIndexer)
  spec.csharp:
  - name: this
  - name: '['
  - name: TIndexer
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
    name: this[]
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  - name: (
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Type.Base
  commentId: N:NumeralSystems.Net.Type.Base
  href: NumeralSystems.html
  name: NumeralSystems.Net.Type.Base
  nameWithType: NumeralSystems.Net.Type.Base
  fullName: NumeralSystems.Net.Type.Base
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Base
    name: Base
    href: NumeralSystems.Net.Type.Base.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Base
    name: Base
    href: NumeralSystems.Net.Type.Base.html
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Enumerable*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Enumerable
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_Enumerable
  name: Enumerable
  nameWithType: IncompleteDouble.Enumerable
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Enumerable
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Enumerable
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Enumerable
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Enumerable
  name: Enumerable
  nameWithType: IIncompleteValue<Double, double, ulong>.Enumerable
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>.Enumerable
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong).Enumerable
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong).Enumerable
- uid: System.Collections.Generic.IEnumerable{NumeralSystems.Net.Type.Base.Double}
  commentId: T:System.Collections.Generic.IEnumerable{NumeralSystems.Net.Type.Base.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Double>
  nameWithType: IEnumerable<Double>
  fullName: System.Collections.Generic.IEnumerable<NumeralSystems.Net.Type.Base.Double>
  nameWithType.vb: IEnumerable(Of Double)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NumeralSystems.Net.Type.Base.Double)
  name.vb: IEnumerable(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Enumerable
  name: Enumerable
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Enumerable
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Enumerable
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Enumerable
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Enumerable
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ByteArray*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ByteArray
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_ByteArray
  name: ByteArray
  nameWithType: IncompleteDouble.ByteArray
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ByteArray
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ByteArray
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ByteArray
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ByteArray
  name: ByteArray
  nameWithType: IIncompleteValue<Double, double, ulong>.ByteArray
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>.ByteArray
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong).ByteArray
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong).ByteArray
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte[]
  isExternal: true
  href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  name: IncompleteByte[]
  nameWithType: IncompleteByte[]
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteByte[]
  nameWithType.vb: IncompleteByte()
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteByte()
  name.vb: IncompleteByte()
  spec.csharp:
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ByteArray
  name: ByteArray
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ByteArray
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ByteArray
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ByteArray
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ByteArray
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToByteArray*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToByteArray
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_ToByteArray
  name: ToByteArray
  nameWithType: IncompleteDouble.ToByteArray
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToByteArray
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToByteArray
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToByteArray
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  name: ToByteArray()
  nameWithType: IIncompleteValue<Double, double, ulong>.ToByteArray()
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>.ToByteArray()
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong).ToByteArray()
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong).ToByteArray()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  name: ToByteArray()
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ToByteArray()
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ToByteArray()
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ToByteArray()
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ToByteArray()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_ToString_System_String_
  name: ToString
  nameWithType: IncompleteDouble.ToString
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ToString
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToString(System.String)
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  name: ToString(string)
  nameWithType: IIncompleteValue<Double, double, ulong>.ToString(string)
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.Double, double, ulong>.ToString(string)
  nameWithType.vb: IIncompleteValue(Of Double, Double, ULong).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.Double, Double, ULong).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  isExternal: true
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  name: ToString(string)
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ToString(string)
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ToString(string)
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_Or_NumeralSystems_Net_Type_Base_Double_
  name: Or
  nameWithType: IncompleteDouble.Or
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Or
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  name: Or(Double)
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.Or(Double)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Or(NumeralSystems.Net.Type.Base.Double)
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).Or(Double)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Or(NumeralSystems.Net.Type.Base.Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Base.Double)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  commentId: T:NumeralSystems.Net.Type.Incomplete.IncompleteDouble
  parent: NumeralSystems.Net.Type.Incomplete
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  name: IncompleteDouble
  nameWithType: IncompleteDouble
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  name: Or(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_Contains_NumeralSystems_Net_Type_Base_Double_
  name: Contains
  nameWithType: IncompleteDouble.Contains
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Contains
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  name: Contains(Double)
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.Contains(Double)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Contains(NumeralSystems.Net.Type.Base.Double)
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).Contains(Double)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Contains(NumeralSystems.Net.Type.Base.Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Base.Double)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Base.Double)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  name: Contains(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TValue)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  name: Contains(IncompleteDouble)
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.Contains(IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).Contains(IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  name: Contains(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TIncomplete)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Not*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Not
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_Not
  name: Not
  nameWithType: IncompleteDouble.Not
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Not
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  name: Not()
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.Not()
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Not()
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).Not()
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Not()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
    name: Not
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Not
    name: Not
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  name: Not()
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
    name: Not
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
    name: Not
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_Xor_NumeralSystems_Net_Type_Incomplete_IncompleteDouble_
  name: Xor
  nameWithType: IncompleteDouble.Xor
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.Xor
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  name: Xor(IncompleteDouble)
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.Xor(IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).Xor(IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  name: Xor(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  name: Xor(Double)
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.Xor(Double)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Xor(NumeralSystems.Net.Type.Base.Double)
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).Xor(Double)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Xor(NumeralSystems.Net.Type.Base.Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Xor(NumeralSystems.Net.Type.Base.Double)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  name: Xor(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_And_NumeralSystems_Net_Type_Incomplete_IncompleteDouble_
  name: And
  nameWithType: IncompleteDouble.And
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.And
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  name: And(IncompleteDouble)
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.And(IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).And(IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  name: And(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  name: And(Double)
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.And(Double)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.And(NumeralSystems.Net.Type.Base.Double)
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).And(Double)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).And(NumeralSystems.Net.Type.Base.Double)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.And(NumeralSystems.Net.Type.Base.Double)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  name: And(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  name: Or(IncompleteDouble)
  nameWithType: IIRregularOperable<IncompleteDouble, Double, double, ulong>.Or(IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IIRregularOperable(Of IncompleteDouble, Double, Double, ULong).Or(IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  name: Or(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_ReverseAnd_NumeralSystems_Net_Type_Base_Double_NumeralSystems_Net_Type_Incomplete_IncompleteDouble__
  name: ReverseAnd
  nameWithType: IncompleteDouble.ReverseAnd
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseAnd
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(Double, out IncompleteDouble)
  nameWithType: IRregularReversible<IncompleteDouble, Double, double, ulong>.ReverseAnd(Double, out IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.ReverseAnd(NumeralSystems.Net.Type.Base.Double, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRregularReversible(Of IncompleteDouble, Double, Double, ULong).ReverseAnd(Double, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).ReverseAnd(NumeralSystems.Net.Type.Base.Double, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseAnd(Double, IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(TNumeralValue, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TNumeralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TNumeralValue, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TNumeralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TNumeralValue, TIncomplete)
  name.vb: ReverseAnd(TNumeralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(IncompleteDouble, out IncompleteDouble)
  nameWithType: IRregularReversible<IncompleteDouble, Double, double, ulong>.ReverseAnd(IncompleteDouble, out IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRregularReversible(Of IncompleteDouble, Double, Double, ULong).ReverseAnd(IncompleteDouble, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseAnd(IncompleteDouble, IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  name.vb: ReverseAnd(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr
  href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html#NumeralSystems_Net_Type_Incomplete_IncompleteDouble_ReverseOr_NumeralSystems_Net_Type_Base_Double_NumeralSystems_Net_Type_Incomplete_IncompleteDouble__
  name: ReverseOr
  nameWithType: IncompleteDouble.ReverseOr
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.ReverseOr
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  name: ReverseOr(Double, out IncompleteDouble)
  nameWithType: IRregularReversible<IncompleteDouble, Double, double, ulong>.ReverseOr(Double, out IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.ReverseOr(NumeralSystems.Net.Type.Base.Double, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRregularReversible(Of IncompleteDouble, Double, Double, ULong).ReverseOr(Double, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).ReverseOr(NumeralSystems.Net.Type.Base.Double, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseOr(Double, IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Base.Double,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.Double
    name: Double
    href: NumeralSystems.Net.Type.Base.Double.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  name: ReverseOr(TNumeralValue, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TNumeralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TNumeralValue, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TNumeralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TNumeralValue, TIncomplete)
  name.vb: ReverseOr(TNumeralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  name: ReverseOr(IncompleteDouble, out IncompleteDouble)
  nameWithType: IRregularReversible<IncompleteDouble, Double, double, ulong>.ReverseOr(IncompleteDouble, out IncompleteDouble)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, double, ulong>.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, out NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  nameWithType.vb: IRregularReversible(Of IncompleteDouble, Double, Double, ULong).ReverseOr(IncompleteDouble, IncompleteDouble)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Base.Double, Double, ULong).ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble, NumeralSystems.Net.Type.Incomplete.IncompleteDouble)
  name.vb: ReverseOr(IncompleteDouble, IncompleteDouble)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Base.Double,System.Double,System.UInt64}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteDouble,NumeralSystems.Net.Type.Incomplete.IncompleteDouble@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteDouble
    name: IncompleteDouble
    href: NumeralSystems.Net.Type.Incomplete.IncompleteDouble.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  name: ReverseOr(TIncomplete, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  name.vb: ReverseOr(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
