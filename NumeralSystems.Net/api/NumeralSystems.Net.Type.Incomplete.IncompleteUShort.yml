### YamlMime:ManagedReference
items:
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  commentId: T:NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  id: IncompleteUShort
  parent: NumeralSystems.Net.Type.Incomplete
  children:
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And(NumeralSystems.Net.Type.Base.UShort)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Binary
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ByteArray
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains(NumeralSystems.Net.Type.Base.UShort)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Enumerable
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.IsComplete
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Item(System.UInt32)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Not
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or(NumeralSystems.Net.Type.Base.UShort)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Permutations
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToByteArray
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString(System.String)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor(NumeralSystems.Net.Type.Base.UShort)
  - NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  langs:
  - csharp
  - vb
  name: IncompleteUShort
  nameWithType: IncompleteUShort
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  type: Class
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: IncompleteUShort
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 19
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Represents an incomplete unsigned short (ushort) value.
  remarks: >-
    <p>

    The <code>IncompleteUShort</code> class represents an unsigned short value with missing bits that are represented as null values in an array of nullable booleans. It implements various bitwise operations and can be used to perform operations on incomplete binary values.

    </p>

    <p>

    The <code>IncompleteUShort</code> class implements the <code>IIRregularOperable</code> interface, which defines the operations that can be performed on incomplete values.

    </p>
  example: []
  syntax:
    content: 'public class IncompleteUShort : IIRregularOperable<IncompleteUShort, UShort, ushort, uint>, IIncompleteValue<UShort, ushort, uint>, IRregularReversible<IncompleteUShort, UShort, ushort, uint>'
    content.vb: Public Class IncompleteUShort Implements IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger), IIncompleteValue(Of UShort, UShort, UInteger), IRregularReversible(Of IncompleteUShort, UShort, UShort, UInteger)
  inheritance:
  - System.Object
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Binary
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Binary
  id: Binary
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Binary
  nameWithType: IncompleteUShort.Binary
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Binary
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Binary
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 23
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Incomplete binary representation of the value.
  example: []
  syntax:
    content: public bool?[] Binary { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}[]
    content.vb: Public Property Binary As Boolean?()
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Binary*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Binary
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.IsComplete
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.IsComplete
  id: IsComplete
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: IsComplete
  nameWithType: IncompleteUShort.IsComplete
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.IsComplete
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: IsComplete
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 51
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Represents an incomplete unsigned short value.
  example: []
  syntax:
    content: public bool IsComplete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsComplete As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.IsComplete*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.IsComplete
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Permutations
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Permutations
  id: Permutations
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Permutations
  nameWithType: IncompleteUShort.Permutations
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Permutations
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Permutations
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 52
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Permutations count of the incomplete value.
  example: []
  syntax:
    content: public uint Permutations { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property Permutations As UInteger
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Permutations*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Permutations
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Item(System.UInt32)
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Item(System.UInt32)
  id: Item(System.UInt32)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: this[uint]
  nameWithType: IncompleteUShort.this[uint]
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.this[uint]
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: this[]
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 63
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Represents an incomplete ushort value that can be used for bitwise operations.
  remarks: This class implements the <xref href="NumeralSystems.Net.Interface.IIncompleteValue%603" data-throw-if-not-resolved="false"></xref> interface.
  example: []
  syntax:
    content: public UShort this[uint value] { get; }
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: NumeralSystems.Net.Type.Base.UShort
    content.vb: Public ReadOnly Default Property this[](value As UInteger) As [UShort]
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Item*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Item(System.UInt32)
  nameWithType.vb: IncompleteUShort.this[](UInteger)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.this[](UInteger)
  name.vb: this[](UInteger)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Enumerable
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Enumerable
  id: Enumerable
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Enumerable
  nameWithType: IncompleteUShort.Enumerable
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Enumerable
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Enumerable
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 91
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Enumerable of all possible values.
  example: []
  syntax:
    content: public IEnumerable<UShort> Enumerable { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NumeralSystems.Net.Type.Base.UShort}
    content.vb: Public ReadOnly Property Enumerable As IEnumerable(Of [UShort])
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Enumerable*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Enumerable
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ByteArray
  commentId: P:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ByteArray
  id: ByteArray
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: ByteArray
  nameWithType: IncompleteUShort.ByteArray
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ByteArray
  type: Property
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ByteArray
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 95
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  example: []
  syntax:
    content: public IncompleteByte[] ByteArray { get; }
    parameters: []
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte[]
    content.vb: Public ReadOnly Property ByteArray As IncompleteByte()
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ByteArray*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ByteArray
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToByteArray
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToByteArray
  id: ToByteArray
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: ToByteArray()
  nameWithType: IncompleteUShort.ToByteArray()
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToByteArray()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToByteArray
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 101
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Returns the IncompleteUShort object represented as an array of IncompleteByte objects.
  example: []
  syntax:
    content: public IncompleteByte[] ToByteArray()
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteByte[]
      description: An array of IncompleteByte objects representing the IncompleteUShort object.
    content.vb: Public Function ToByteArray() As IncompleteByte()
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToByteArray*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToByteArray
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString(System.String)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString(System.String)
  id: ToString(System.String)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: IncompleteUShort.ToString(string)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString(string)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ToString
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 108
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Returns a string representation of the IncompleteUShort object.
  example: []
  syntax:
    content: public string ToString(string missingSeparator = "*")
    parameters:
    - id: missingSeparator
      type: System.String
      description: The separator to use for missing values.
    return:
      type: System.String
      description: A string representation of the IncompleteUShort object.
    content.vb: Public Function ToString(missingSeparator As String = "*") As String
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString*
  implements:
  - NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToString(System.String)
  nameWithType.vb: IncompleteUShort.ToString(String)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString(String)
  name.vb: ToString(String)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or(NumeralSystems.Net.Type.Base.UShort)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or(NumeralSystems.Net.Type.Base.UShort)
  id: Or(NumeralSystems.Net.Type.Base.UShort)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Or(UShort)
  nameWithType: IncompleteUShort.Or(UShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or(NumeralSystems.Net.Type.Base.UShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 116
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: >-
    Represents an incomplete unsigned short (ushort) value.

    This class implements the <xref href="NumeralSystems.Net.Interface.IIRregularOperable%604" data-throw-if-not-resolved="false"></xref> interface.
  example: []
  syntax:
    content: public IncompleteUShort Or(UShort other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Base.UShort
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    content.vb: Public Function [Or](other As [UShort]) As IncompleteUShort
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Base.UShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains(NumeralSystems.Net.Type.Base.UShort)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains(NumeralSystems.Net.Type.Base.UShort)
  id: Contains(NumeralSystems.Net.Type.Base.UShort)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Contains(UShort)
  nameWithType: IncompleteUShort.Contains(UShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains(NumeralSystems.Net.Type.Base.UShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Contains
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 128
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Determines whether the binary representation of the <xref href="NumeralSystems.Net.Type.Base.UShort" data-throw-if-not-resolved="false"></xref> value contains the binary representation of the specified <xref href="NumeralSystems.Net.Type.Base.UShort" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: public bool Contains(UShort value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Base.UShort
      description: The <xref href="NumeralSystems.Net.Type.Base.UShort" data-throw-if-not-resolved="false"></xref> value to check.
    return:
      type: System.Boolean
      description: true if the binary representation of the current <xref href="NumeralSystems.Net.Type.Base.UShort" data-throw-if-not-resolved="false"></xref> value contains the binary representation of the specified <xref href="NumeralSystems.Net.Type.Base.UShort" data-throw-if-not-resolved="false"></xref> value; otherwise, false.
    content.vb: Public Function Contains(value As [UShort]) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Base.UShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  id: Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Contains(IncompleteUShort)
  nameWithType: IncompleteUShort.Contains(IncompleteUShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Contains
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 139
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  syntax:
    content: public bool Contains(IncompleteUShort value)
    parameters:
    - id: value
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    return:
      type: System.Boolean
    content.vb: Public Function Contains(value As IncompleteUShort) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Not
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Not
  id: Not
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Not()
  nameWithType: IncompleteUShort.Not()
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Not()
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Not
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 161
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Returns a new IncompleteUShort object with the binary representation of the current IncompleteUShort object after applying the bitwise logical NOT operation to each bit.
  remarks: The Not method returns a new IncompleteUShort object with the binary representation of the current IncompleteUShort object after applying the bitwise logical NOT operation to each bit. The resulting binary array will have the same length as the original binary array, with true values representing false and false values representing true.
  example: []
  syntax:
    content: public IncompleteUShort Not()
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
      description: A new IncompleteUShort object representing the result of the bitwise logical NOT operation.
    content.vb: Public Function [Not]() As IncompleteUShort
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Not*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Not
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  id: Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Xor(IncompleteUShort)
  nameWithType: IncompleteUShort.Xor(IncompleteUShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 170
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  example: []
  syntax:
    content: public IncompleteUShort Xor(IncompleteUShort other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    content.vb: Public Function [Xor](other As IncompleteUShort) As IncompleteUShort
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor(NumeralSystems.Net.Type.Base.UShort)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor(NumeralSystems.Net.Type.Base.UShort)
  id: Xor(NumeralSystems.Net.Type.Base.UShort)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Xor(UShort)
  nameWithType: IncompleteUShort.Xor(UShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor(NumeralSystems.Net.Type.Base.UShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Xor
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 180
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise exclusive OR operation between the binary representation of the current IncompleteUShort object and the binary representation of the specified UShort object.
  example: []
  syntax:
    content: public IncompleteUShort Xor(UShort other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Base.UShort
      description: The UShort object to perform the XOR operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
      description: A new IncompleteUShort object with the result of the XOR operation.
    content.vb: Public Function [Xor](other As [UShort]) As IncompleteUShort
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.UShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  id: And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: And(IncompleteUShort)
  nameWithType: IncompleteUShort.And(IncompleteUShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 188
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Represents an incomplete unsigned short value. Provides methods for bitwise operations and conversion to other types.
  example: []
  syntax:
    content: public IncompleteUShort And(IncompleteUShort other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    content.vb: Public Function [And](other As IncompleteUShort) As IncompleteUShort
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And(NumeralSystems.Net.Type.Base.UShort)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And(NumeralSystems.Net.Type.Base.UShort)
  id: And(NumeralSystems.Net.Type.Base.UShort)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: And(UShort)
  nameWithType: IncompleteUShort.And(UShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And(NumeralSystems.Net.Type.Base.UShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: And
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 199
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: >-
    Performs a bitwise AND operation between the binary representation of the current instance

    and the binary representation of the specified UShort value.
  example: []
  syntax:
    content: public IncompleteUShort And(UShort other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Base.UShort
      description: The UShort value to perform the bitwise AND operation with.
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
      description: A new instance of IncompleteUShort with the result of the bitwise AND operation.
    content.vb: Public Function [And](other As [UShort]) As IncompleteUShort
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Base.UShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  id: Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: Or(IncompleteUShort)
  nameWithType: IncompleteUShort.Or(IncompleteUShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: Or
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 208
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  example: []
  syntax:
    content: public IncompleteUShort Or(IncompleteUShort other)
    parameters:
    - id: other
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    return:
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    content.vb: Public Function [Or](other As IncompleteUShort) As IncompleteUShort
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or*
  implements:
  - NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  id: ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: ReverseAnd(UShort, out IncompleteUShort)
  nameWithType: IncompleteUShort.ReverseAnd(UShort, out IncompleteUShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Base.UShort, out NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseAnd
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 219
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a bitwise reverse AND operation on the binary representations of two UShort objects.
  example: []
  syntax:
    content: public bool ReverseAnd(UShort right, out IncompleteUShort result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Base.UShort
      description: The UShort object to reverse AND with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
      description: When this method returns, contains the result of the reverse AND operation.
    return:
      type: System.Boolean
      description: true if the reverse AND operation is successful; otherwise, false.
    content.vb: Public Function ReverseAnd(right As [UShort], result As IncompleteUShort) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd*
  implements:
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  nameWithType.vb: IncompleteUShort.ReverseAnd(UShort, IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Base.UShort, NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  name.vb: ReverseAnd(UShort, IncompleteUShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  id: ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: ReverseAnd(IncompleteUShort, out IncompleteUShort)
  nameWithType: IncompleteUShort.ReverseAnd(IncompleteUShort, out IncompleteUShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort, out NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseAnd
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 240
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Performs a logical AND operation between the binary representation of two IncompleteUShort instances and reverses the result.
  example: []
  syntax:
    content: public bool ReverseAnd(IncompleteUShort right, out IncompleteUShort result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
      description: The IncompleteUShort instance to perform the operation with.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
      description: When this method returns, contains the IncompleteUShort instance that represents the result of the operation, if the operation succeeded; otherwise, null. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if the operation succeeded; otherwise, false.
    content.vb: Public Function ReverseAnd(right As IncompleteUShort, result As IncompleteUShort) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd*
  implements:
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  nameWithType.vb: IncompleteUShort.ReverseAnd(IncompleteUShort, IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  name.vb: ReverseAnd(IncompleteUShort, IncompleteUShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  id: ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: ReverseOr(UShort, out IncompleteUShort)
  nameWithType: IncompleteUShort.ReverseOr(UShort, out IncompleteUShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Base.UShort, out NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseOr
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 260
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  syntax:
    content: public bool ReverseOr(UShort right, out IncompleteUShort result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Base.UShort
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    return:
      type: System.Boolean
    content.vb: Public Function ReverseOr(right As [UShort], result As IncompleteUShort) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr*
  implements:
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  nameWithType.vb: IncompleteUShort.ReverseOr(UShort, IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Base.UShort, NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  name.vb: ReverseOr(UShort, IncompleteUShort)
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  commentId: M:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  id: ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  parent: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  langs:
  - csharp
  - vb
  name: ReverseOr(IncompleteUShort, out IncompleteUShort)
  nameWithType: IncompleteUShort.ReverseOr(IncompleteUShort, out IncompleteUShort)
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort, out NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  type: Method
  source:
    remote:
      path: NumeralSystems.Net/NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
      branch: master
      repo: https://github.com/MiLattanzio/NumeralSystems.git
    id: ReverseOr
    path: NumeralSystems.Net/Type/Incomplete/IncompleteUShort.cs
    startLine: 283
  assemblies:
  - NumeralSystems.Net
  namespace: NumeralSystems.Net.Type.Incomplete
  summary: Reverses the binary representation and performs the logical OR operation on two instances of IncompleteUShort.
  example: []
  syntax:
    content: public bool ReverseOr(IncompleteUShort right, out IncompleteUShort result)
    parameters:
    - id: right
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
      description: The second IncompleteUShort instance to reverse OR.
    - id: result
      type: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
      description: When this method returns, contains the IncompleteUShort instance that is the result of the reverse OR operation. If the operation fails, the result parameter is set to null.
    return:
      type: System.Boolean
      description: true if the reverse OR operation is successful; otherwise, false.
    content.vb: Public Function ReverseOr(right As IncompleteUShort, result As IncompleteUShort) As Boolean
  overload: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr*
  implements:
  - NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  nameWithType.vb: IncompleteUShort.ReverseOr(IncompleteUShort, IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  name.vb: ReverseOr(IncompleteUShort, IncompleteUShort)
references:
- uid: NumeralSystems.Net.Type.Incomplete
  commentId: N:NumeralSystems.Net.Type.Incomplete
  href: NumeralSystems.html
  name: NumeralSystems.Net.Type.Incomplete
  nameWithType: NumeralSystems.Net.Type.Incomplete
  fullName: NumeralSystems.Net.Type.Incomplete
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Type.Incomplete.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Incomplete
    name: Incomplete
    href: NumeralSystems.Net.Type.Incomplete.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  commentId: T:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  name: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger)
  name.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4
    name: IIRregularOperable
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4
    name: IIRregularOperable
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  commentId: T:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  name: IIncompleteValue<UShort, ushort, uint>
  nameWithType: IIncompleteValue<UShort, ushort, uint>
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger)
  name.vb: IIncompleteValue(Of UShort, UShort, UInteger)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: <
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  commentId: T:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  parent: NumeralSystems.Net.Interface
  definition: NumeralSystems.Net.Interface.IRregularReversible`4
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  name: IRregularReversible<IncompleteUShort, UShort, ushort, uint>
  nameWithType: IRregularReversible<IncompleteUShort, UShort, ushort, uint>
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>
  nameWithType.vb: IRregularReversible(Of IncompleteUShort, UShort, UShort, UInteger)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger)
  name.vb: IRregularReversible(Of IncompleteUShort, UShort, UShort, UInteger)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: <
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4
  commentId: T:NumeralSystems.Net.Interface.IIRregularOperable`4
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  name: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
  name.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4
    name: IIRregularOperable
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4
    name: IIRregularOperable
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface
  commentId: N:NumeralSystems.Net.Interface
  href: NumeralSystems.html
  name: NumeralSystems.Net.Interface
  nameWithType: NumeralSystems.Net.Interface
  fullName: NumeralSystems.Net.Interface
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Interface
    name: Interface
    href: NumeralSystems.Net.Interface.html
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3
  commentId: T:NumeralSystems.Net.Interface.IIncompleteValue`3
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  name: IIncompleteValue<TValue, TType, TIndexer>
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer)
  name.vb: IIncompleteValue(Of TValue, TType, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3
    name: IIncompleteValue
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4
  commentId: T:NumeralSystems.Net.Interface.IRregularReversible`4
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  name: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  name.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: <
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: '>'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4
    name: IRregularReversible
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Binary*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Binary
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_Binary
  name: Binary
  nameWithType: IncompleteUShort.Binary
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Binary
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Binary
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Binary
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Binary
  name: Binary
  nameWithType: IIncompleteValue<UShort, ushort, uint>.Binary
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Binary
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger).Binary
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Binary
- uid: System.Nullable{System.Boolean}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?[]
  nameWithType: bool?[]
  fullName: bool?[]
  nameWithType.vb: Boolean?()
  fullName.vb: Boolean?()
  name.vb: Boolean?()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Binary
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Binary
  name: Binary
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Binary
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Binary
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Binary
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Binary
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.IsComplete*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.IsComplete
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_IsComplete
  name: IsComplete
  nameWithType: IncompleteUShort.IsComplete
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.IsComplete
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.IsComplete
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.IsComplete
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_IsComplete
  name: IsComplete
  nameWithType: IIncompleteValue<UShort, ushort, uint>.IsComplete
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>.IsComplete
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger).IsComplete
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).IsComplete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.IsComplete
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_IsComplete
  name: IsComplete
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.IsComplete
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.IsComplete
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).IsComplete
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).IsComplete
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Permutations*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Permutations
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_Permutations
  name: Permutations
  nameWithType: IncompleteUShort.Permutations
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Permutations
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Permutations
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Permutations
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Permutations
  name: Permutations
  nameWithType: IIncompleteValue<UShort, ushort, uint>.Permutations
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Permutations
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger).Permutations
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Permutations
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Permutations
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Permutations
  name: Permutations
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Permutations
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Permutations
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Permutations
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Permutations
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Item*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Item
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_Item_System_UInt32_
  name: this
  nameWithType: IncompleteUShort.this
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.this
  nameWithType.vb: IncompleteUShort.this[]
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.this[]
  name.vb: this[]
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Item(System.UInt32)
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Item(System.UInt32)
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: this[uint]
  nameWithType: IIncompleteValue<UShort, ushort, uint>.this[uint]
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>.this[uint]
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger).this[](UInteger)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).this[](UInteger)
  name.vb: this[](UInteger)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Item(System.UInt32)
    name: this[]
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: NumeralSystems.Net.Type.Base.UShort
  commentId: T:NumeralSystems.Net.Type.Base.UShort
  parent: NumeralSystems.Net.Type.Base
  href: NumeralSystems.Net.Type.Base.UShort.html
  name: UShort
  nameWithType: UShort
  fullName: NumeralSystems.Net.Type.Base.UShort
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  name: this[TIndexer]
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.this[TIndexer]
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.this[TIndexer]
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).this[](TIndexer)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).this[](TIndexer)
  name.vb: this[](TIndexer)
  spec.csharp:
  - name: this
  - name: '['
  - name: TIndexer
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Item(`2)
    name: this[]
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Item__2_
  - name: (
  - name: TIndexer
  - name: )
- uid: NumeralSystems.Net.Type.Base
  commentId: N:NumeralSystems.Net.Type.Base
  href: NumeralSystems.html
  name: NumeralSystems.Net.Type.Base
  nameWithType: NumeralSystems.Net.Type.Base
  fullName: NumeralSystems.Net.Type.Base
  spec.csharp:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Base
    name: Base
    href: NumeralSystems.Net.Type.Base.html
  spec.vb:
  - uid: NumeralSystems
    name: NumeralSystems
    href: NumeralSystems.html
  - name: .
  - uid: NumeralSystems.Net
    name: Net
    href: NumeralSystems.Net.html
  - name: .
  - uid: NumeralSystems.Net.Type
    name: Type
    href: NumeralSystems.Net.Type.html
  - name: .
  - uid: NumeralSystems.Net.Type.Base
    name: Base
    href: NumeralSystems.Net.Type.Base.html
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Enumerable*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Enumerable
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_Enumerable
  name: Enumerable
  nameWithType: IncompleteUShort.Enumerable
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Enumerable
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Enumerable
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Enumerable
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Enumerable
  name: Enumerable
  nameWithType: IIncompleteValue<UShort, ushort, uint>.Enumerable
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Enumerable
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger).Enumerable
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Enumerable
- uid: System.Collections.Generic.IEnumerable{NumeralSystems.Net.Type.Base.UShort}
  commentId: T:System.Collections.Generic.IEnumerable{NumeralSystems.Net.Type.Base.UShort}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<UShort>
  nameWithType: IEnumerable<UShort>
  fullName: System.Collections.Generic.IEnumerable<NumeralSystems.Net.Type.Base.UShort>
  nameWithType.vb: IEnumerable(Of UShort)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NumeralSystems.Net.Type.Base.UShort)
  name.vb: IEnumerable(Of UShort)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.Enumerable
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_Enumerable
  name: Enumerable
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.Enumerable
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.Enumerable
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).Enumerable
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).Enumerable
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ByteArray*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ByteArray
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_ByteArray
  name: ByteArray
  nameWithType: IncompleteUShort.ByteArray
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ByteArray
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ByteArray
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ByteArray
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ByteArray
  name: ByteArray
  nameWithType: IIncompleteValue<UShort, ushort, uint>.ByteArray
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>.ByteArray
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger).ByteArray
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).ByteArray
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte[]
  isExternal: true
  href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  name: IncompleteByte[]
  nameWithType: IncompleteByte[]
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteByte[]
  nameWithType.vb: IncompleteByte()
  fullName.vb: NumeralSystems.Net.Type.Incomplete.IncompleteByte()
  name.vb: IncompleteByte()
  spec.csharp:
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteByte
    name: IncompleteByte
    href: NumeralSystems.Net.Type.Incomplete.IncompleteByte.html
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  commentId: P:NumeralSystems.Net.Interface.IIncompleteValue`3.ByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ByteArray
  name: ByteArray
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ByteArray
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ByteArray
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ByteArray
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ByteArray
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToByteArray*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToByteArray
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_ToByteArray
  name: ToByteArray
  nameWithType: IncompleteUShort.ToByteArray
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToByteArray
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToByteArray
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToByteArray
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  name: ToByteArray()
  nameWithType: IIncompleteValue<UShort, ushort, uint>.ToByteArray()
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>.ToByteArray()
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger).ToByteArray()
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).ToByteArray()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  name: ToByteArray()
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ToByteArray()
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ToByteArray()
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ToByteArray()
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ToByteArray()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToByteArray
    name: ToByteArray
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToByteArray
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_ToString_System_String_
  name: ToString
  nameWithType: IncompleteUShort.ToString
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ToString
- uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToString(System.String)
  parent: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  name: ToString(string)
  nameWithType: IIncompleteValue<UShort, ushort, uint>.ToString(string)
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<NumeralSystems.Net.Type.Base.UShort, ushort, uint>.ToString(string)
  nameWithType.vb: IIncompleteValue(Of UShort, UShort, UInteger).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue{NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  commentId: M:NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
  isExternal: true
  href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  name: ToString(string)
  nameWithType: IIncompleteValue<TValue, TType, TIndexer>.ToString(string)
  fullName: NumeralSystems.Net.Interface.IIncompleteValue<TValue, TType, TIndexer>.ToString(string)
  nameWithType.vb: IIncompleteValue(Of TValue, TType, TIndexer).ToString(String)
  fullName.vb: NumeralSystems.Net.Interface.IIncompleteValue(Of TValue, TType, TIndexer).ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIncompleteValue`3.ToString(System.String)
    name: ToString
    href: NumeralSystems.Net.Interface.IIncompleteValue-3.html#NumeralSystems_Net_Interface_IIncompleteValue_3_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_Or_NumeralSystems_Net_Type_Base_UShort_
  name: Or
  nameWithType: IncompleteUShort.Or
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Or
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Base.UShort)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Base.UShort)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  name: Or(UShort)
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.Or(UShort)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Or(NumeralSystems.Net.Type.Base.UShort)
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).Or(UShort)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Or(NumeralSystems.Net.Type.Base.UShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Base.UShort)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Base.UShort)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  commentId: T:NumeralSystems.Net.Type.Incomplete.IncompleteUShort
  parent: NumeralSystems.Net.Type.Incomplete
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  name: IncompleteUShort
  nameWithType: IncompleteUShort
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  name: Or(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TValue)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`1)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_Contains_NumeralSystems_Net_Type_Base_UShort_
  name: Contains
  nameWithType: IncompleteUShort.Contains
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Contains
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Base.UShort)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Base.UShort)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  name: Contains(UShort)
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.Contains(UShort)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Contains(NumeralSystems.Net.Type.Base.UShort)
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).Contains(UShort)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Contains(NumeralSystems.Net.Type.Base.UShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Base.UShort)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Base.UShort)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  name: Contains(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TValue)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`1)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  name: Contains(IncompleteUShort)
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.Contains(IncompleteUShort)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).Contains(IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Contains(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  name: Contains(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Contains(TIncomplete)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Contains(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Contains(`0)
    name: Contains
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Contains__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Not*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Not
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_Not
  name: Not
  nameWithType: IncompleteUShort.Not
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Not
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Not
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Not
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  name: Not()
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.Not()
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Not()
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).Not()
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Not()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Not
    name: Not
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Not
    name: Not
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  - name: (
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Not
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  name: Not()
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Not()
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Not()
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
    name: Not
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  - name: (
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Not
    name: Not
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Not
  - name: (
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_Xor_NumeralSystems_Net_Type_Incomplete_IncompleteUShort_
  name: Xor
  nameWithType: IncompleteUShort.Xor
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.Xor
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  name: Xor(IncompleteUShort)
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.Xor(IncompleteUShort)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).Xor(IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  name: Xor(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TIncomplete)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`0)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.UShort)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.UShort)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  name: Xor(UShort)
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.Xor(UShort)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Xor(NumeralSystems.Net.Type.Base.UShort)
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).Xor(UShort)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Xor(NumeralSystems.Net.Type.Base.UShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.UShort)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Xor(NumeralSystems.Net.Type.Base.UShort)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  name: Xor(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Xor(TValue)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Xor(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Xor(`1)
    name: Xor
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Xor__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_And_NumeralSystems_Net_Type_Incomplete_IncompleteUShort_
  name: And
  nameWithType: IncompleteUShort.And
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.And
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  name: And(IncompleteUShort)
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.And(IncompleteUShort)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).And(IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  name: And(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TIncomplete)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`0)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Base.UShort)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Base.UShort)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  name: And(UShort)
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.And(UShort)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.And(NumeralSystems.Net.Type.Base.UShort)
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).And(UShort)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).And(NumeralSystems.Net.Type.Base.UShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Base.UShort)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.And(NumeralSystems.Net.Type.Base.UShort)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  name: And(TValue)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.And(TValue)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).And(TValue)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.And(`1)
    name: And
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_And__1_
  - name: (
  - name: TValue
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  parent: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  name: Or(IncompleteUShort)
  nameWithType: IIRregularOperable<IncompleteUShort, UShort, ushort, uint>.Or(IncompleteUShort)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  nameWithType.vb: IIRregularOperable(Of IncompleteUShort, UShort, UShort, UInteger).Or(IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.Or(NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  commentId: M:NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
  href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  name: Or(TIncomplete)
  nameWithType: IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  fullName: NumeralSystems.Net.Interface.IIRregularOperable<TIncomplete, TValue, TType, TIndexer>.Or(TIncomplete)
  nameWithType.vb: IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IIRregularOperable(Of TIncomplete, TValue, TType, TIndexer).Or(TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  - name: (
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IIRregularOperable`4.Or(`0)
    name: Or
    href: NumeralSystems.Net.Interface.IIRregularOperable-4.html#NumeralSystems_Net_Interface_IIRregularOperable_4_Or__0_
  - name: (
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_ReverseAnd_NumeralSystems_Net_Type_Base_UShort_NumeralSystems_Net_Type_Incomplete_IncompleteUShort__
  name: ReverseAnd
  nameWithType: IncompleteUShort.ReverseAnd
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseAnd
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(UShort, out IncompleteUShort)
  nameWithType: IRregularReversible<IncompleteUShort, UShort, ushort, uint>.ReverseAnd(UShort, out IncompleteUShort)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.ReverseAnd(NumeralSystems.Net.Type.Base.UShort, out NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  nameWithType.vb: IRregularReversible(Of IncompleteUShort, UShort, UShort, UInteger).ReverseAnd(UShort, IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).ReverseAnd(NumeralSystems.Net.Type.Base.UShort, NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  name.vb: ReverseAnd(UShort, IncompleteUShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  name: ReverseAnd(TNumeralValue, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TNumeralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TNumeralValue, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TNumeralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TNumeralValue, TIncomplete)
  name.vb: ReverseAnd(TNumeralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`1,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(IncompleteUShort, out IncompleteUShort)
  nameWithType: IRregularReversible<IncompleteUShort, UShort, ushort, uint>.ReverseAnd(IncompleteUShort, out IncompleteUShort)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort, out NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  nameWithType.vb: IRregularReversible(Of IncompleteUShort, UShort, UShort, UInteger).ReverseAnd(IncompleteUShort, IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  name.vb: ReverseAnd(IncompleteUShort, IncompleteUShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseAnd(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  name: ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseAnd(TIncomplete, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseAnd(TIncomplete, TIncomplete)
  name.vb: ReverseAnd(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseAnd(`0,`0@)
    name: ReverseAnd
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseAnd__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr*
  commentId: Overload:NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr
  href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html#NumeralSystems_Net_Type_Incomplete_IncompleteUShort_ReverseOr_NumeralSystems_Net_Type_Base_UShort_NumeralSystems_Net_Type_Incomplete_IncompleteUShort__
  name: ReverseOr
  nameWithType: IncompleteUShort.ReverseOr
  fullName: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.ReverseOr
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  name: ReverseOr(UShort, out IncompleteUShort)
  nameWithType: IRregularReversible<IncompleteUShort, UShort, ushort, uint>.ReverseOr(UShort, out IncompleteUShort)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.ReverseOr(NumeralSystems.Net.Type.Base.UShort, out NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  nameWithType.vb: IRregularReversible(Of IncompleteUShort, UShort, UShort, UInteger).ReverseOr(UShort, IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).ReverseOr(NumeralSystems.Net.Type.Base.UShort, NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  name.vb: ReverseOr(UShort, IncompleteUShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Base.UShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Base.UShort
    name: UShort
    href: NumeralSystems.Net.Type.Base.UShort.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  name: ReverseOr(TNumeralValue, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TNumeralValue, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TNumeralValue, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TNumeralValue, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TNumeralValue, TIncomplete)
  name.vb: ReverseOr(TNumeralValue, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`1,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__1__0__
  - name: (
  - name: TNumeralValue
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
  parent: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}
  definition: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  name: ReverseOr(IncompleteUShort, out IncompleteUShort)
  nameWithType: IRregularReversible<IncompleteUShort, UShort, ushort, uint>.ReverseOr(IncompleteUShort, out IncompleteUShort)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, ushort, uint>.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort, out NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  nameWithType.vb: IRregularReversible(Of IncompleteUShort, UShort, UShort, UInteger).ReverseOr(IncompleteUShort, IncompleteUShort)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Base.UShort, UShort, UInteger).ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort, NumeralSystems.Net.Type.Incomplete.IncompleteUShort)
  name.vb: ReverseOr(IncompleteUShort, IncompleteUShort)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible{NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Base.UShort,System.UInt16,System.UInt32}.ReverseOr(NumeralSystems.Net.Type.Incomplete.IncompleteUShort,NumeralSystems.Net.Type.Incomplete.IncompleteUShort@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: ','
  - name: " "
  - uid: NumeralSystems.Net.Type.Incomplete.IncompleteUShort
    name: IncompleteUShort
    href: NumeralSystems.Net.Type.Incomplete.IncompleteUShort.html
  - name: )
- uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  commentId: M:NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
  href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  name: ReverseOr(TIncomplete, out TIncomplete)
  nameWithType: IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  fullName: NumeralSystems.Net.Interface.IRregularReversible<TIncomplete, TNumeralValue, TValue, TIndexer>.ReverseOr(TIncomplete, out TIncomplete)
  nameWithType.vb: IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  fullName.vb: NumeralSystems.Net.Interface.IRregularReversible(Of TIncomplete, TNumeralValue, TValue, TIndexer).ReverseOr(TIncomplete, TIncomplete)
  name.vb: ReverseOr(TIncomplete, TIncomplete)
  spec.csharp:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TIncomplete
  - name: )
  spec.vb:
  - uid: NumeralSystems.Net.Interface.IRregularReversible`4.ReverseOr(`0,`0@)
    name: ReverseOr
    href: NumeralSystems.Net.Interface.IRregularReversible-4.html#NumeralSystems_Net_Interface_IRregularReversible_4_ReverseOr__0__0__
  - name: (
  - name: TIncomplete
  - name: ','
  - name: " "
  - name: TIncomplete
  - name: )
